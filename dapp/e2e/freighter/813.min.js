!(function () {
  try {
    var t =
        "undefined" != typeof window
          ? window
          : "undefined" != typeof global
            ? global
            : "undefined" != typeof self
              ? self
              : {},
      e = new t.Error().stack;
    e &&
      ((t._sentryDebugIds = t._sentryDebugIds || {}),
      (t._sentryDebugIds[e] = "695feaf0-6700-4d5a-99ec-17454fefe726"),
      (t._sentryDebugIdIdentifier =
        "sentry-dbid-695feaf0-6700-4d5a-99ec-17454fefe726"));
  } catch (t) {}
})();
var _global =
  "undefined" != typeof window
    ? window
    : "undefined" != typeof global
      ? global
      : "undefined" != typeof self
        ? self
        : {};
(_global.SENTRY_RELEASE = { id: "e9f83a1a7d99e143495c7f8fd098e5ce2321d692" }),
  (globalThis.webpackChunkextension =
    globalThis.webpackChunkextension || []).push([
    [813],
    {
      96200: function (t) {
        var e;
        (e = () =>
          (() => {
            var t = {
                616: (t, e, r) => {
                  "use strict";
                  r.d(e, { A: () => i });
                  var n = r(287);
                  n.hp.alloc(1).subarray(0, 1) instanceof n.hp ||
                    (n.hp.prototype.subarray = function (t, e) {
                      const r = Uint8Array.prototype.subarray.call(this, t, e);
                      return Object.setPrototypeOf(r, n.hp.prototype), r;
                    });
                  const i = n.hp;
                },
                281: (t, e, r) => {
                  const n = r(164);
                  t.exports = n;
                },
                164: (t, e, r) => {
                  "use strict";
                  r.r(e),
                    r.d(e, {
                      Array: () => $,
                      Bool: () => U,
                      Double: () => N,
                      Enum: () => W,
                      Float: () => L,
                      Hyper: () => T,
                      Int: () => E,
                      LargeInt: () => B,
                      Opaque: () => j,
                      Option: () => F,
                      Quadruple: () => O,
                      Reference: () => z,
                      String: () => M,
                      Struct: () => H,
                      Union: () => G,
                      UnsignedHyper: () => I,
                      UnsignedInt: () => x,
                      VarArray: () => V,
                      VarOpaque: () => D,
                      Void: () => q,
                      XdrReader: () => u,
                      XdrWriter: () => l,
                      config: () => nt,
                    });
                  class n extends TypeError {
                    constructor(t) {
                      super(`XDR Write Error: ${t}`);
                    }
                  }
                  class i extends TypeError {
                    constructor(t) {
                      super(`XDR Read Error: ${t}`);
                    }
                  }
                  class o extends TypeError {
                    constructor(t) {
                      super(`XDR Type Definition Error: ${t}`);
                    }
                  }
                  class s extends o {
                    constructor() {
                      super(
                        "method not implemented, it should be overloaded in the descendant class.",
                      );
                    }
                  }
                  var a = r(616).A;
                  class u {
                    constructor(t) {
                      if (!a.isBuffer(t)) {
                        if (
                          !(
                            t instanceof Array ||
                            Array.isArray(t) ||
                            ArrayBuffer.isView(t)
                          )
                        )
                          throw new i(`source invalid: ${t}`);
                        t = a.from(t);
                      }
                      (this._buffer = t),
                        (this._length = t.length),
                        (this._index = 0);
                    }
                    _buffer;
                    _length;
                    _index;
                    get eof() {
                      return this._index === this._length;
                    }
                    advance(t) {
                      const e = this._index;
                      if (((this._index += t), this._length < this._index))
                        throw new i(
                          "attempt to read outside the boundary of the buffer",
                        );
                      const r = 4 - (t % 4 || 4);
                      if (r > 0) {
                        for (let t = 0; t < r; t++)
                          if (0 !== this._buffer[this._index + t])
                            throw new i("invalid padding");
                        this._index += r;
                      }
                      return e;
                    }
                    rewind() {
                      this._index = 0;
                    }
                    read(t) {
                      const e = this.advance(t);
                      return this._buffer.subarray(e, e + t);
                    }
                    readInt32BE() {
                      return this._buffer.readInt32BE(this.advance(4));
                    }
                    readUInt32BE() {
                      return this._buffer.readUInt32BE(this.advance(4));
                    }
                    readBigInt64BE() {
                      return this._buffer.readBigInt64BE(this.advance(8));
                    }
                    readBigUInt64BE() {
                      return this._buffer.readBigUInt64BE(this.advance(8));
                    }
                    readFloatBE() {
                      return this._buffer.readFloatBE(this.advance(4));
                    }
                    readDoubleBE() {
                      return this._buffer.readDoubleBE(this.advance(8));
                    }
                    ensureInputConsumed() {
                      if (this._index !== this._length)
                        throw new i(
                          "invalid XDR contract typecast - source buffer not entirely consumed",
                        );
                    }
                  }
                  var f = r(616).A;
                  const h = 8192;
                  class l {
                    constructor(t) {
                      "number" == typeof t
                        ? (t = f.allocUnsafe(t))
                        : t instanceof f || (t = f.allocUnsafe(h)),
                        (this._buffer = t),
                        (this._length = t.length);
                    }
                    _buffer;
                    _length;
                    _index = 0;
                    alloc(t) {
                      const e = this._index;
                      return (
                        (this._index += t),
                        this._length < this._index && this.resize(this._index),
                        e
                      );
                    }
                    resize(t) {
                      const e = Math.ceil(t / h) * h,
                        r = f.allocUnsafe(e);
                      this._buffer.copy(r, 0, 0, this._length),
                        (this._buffer = r),
                        (this._length = e);
                    }
                    finalize() {
                      return this._buffer.subarray(0, this._index);
                    }
                    toArray() {
                      return [...this.finalize()];
                    }
                    write(t, e) {
                      if ("string" == typeof t) {
                        const r = this.alloc(e);
                        this._buffer.write(t, r, "utf8");
                      } else {
                        t instanceof f || (t = f.from(t));
                        const r = this.alloc(e);
                        t.copy(this._buffer, r, 0, e);
                      }
                      const r = 4 - (e % 4 || 4);
                      if (r > 0) {
                        const t = this.alloc(r);
                        this._buffer.fill(0, t, this._index);
                      }
                    }
                    writeInt32BE(t) {
                      const e = this.alloc(4);
                      this._buffer.writeInt32BE(t, e);
                    }
                    writeUInt32BE(t) {
                      const e = this.alloc(4);
                      this._buffer.writeUInt32BE(t, e);
                    }
                    writeBigInt64BE(t) {
                      const e = this.alloc(8);
                      this._buffer.writeBigInt64BE(t, e);
                    }
                    writeBigUInt64BE(t) {
                      const e = this.alloc(8);
                      this._buffer.writeBigUInt64BE(t, e);
                    }
                    writeFloatBE(t) {
                      const e = this.alloc(4);
                      this._buffer.writeFloatBE(t, e);
                    }
                    writeDoubleBE(t) {
                      const e = this.alloc(8);
                      this._buffer.writeDoubleBE(t, e);
                    }
                    static bufferChunkSize = h;
                  }
                  var c = r(616).A;
                  class d {
                    toXDR(t = "raw") {
                      if (!this.write) return this.constructor.toXDR(this, t);
                      const e = new l();
                      return this.write(this, e), w(e.finalize(), t);
                    }
                    fromXDR(t, e = "raw") {
                      if (!this.read) return this.constructor.fromXDR(t, e);
                      const r = new u(b(t, e)),
                        n = this.read(r);
                      return r.ensureInputConsumed(), n;
                    }
                    validateXDR(t, e = "raw") {
                      try {
                        return this.fromXDR(t, e), !0;
                      } catch (t) {
                        return !1;
                      }
                    }
                    static toXDR(t, e = "raw") {
                      const r = new l();
                      return this.write(t, r), w(r.finalize(), e);
                    }
                    static fromXDR(t, e = "raw") {
                      const r = new u(b(t, e)),
                        n = this.read(r);
                      return r.ensureInputConsumed(), n;
                    }
                    static validateXDR(t, e = "raw") {
                      try {
                        return this.fromXDR(t, e), !0;
                      } catch (t) {
                        return !1;
                      }
                    }
                  }
                  class p extends d {
                    static read(t) {
                      throw new s();
                    }
                    static write(t, e) {
                      throw new s();
                    }
                    static isValid(t) {
                      return !1;
                    }
                  }
                  class g extends d {
                    isValid(t) {
                      return !1;
                    }
                  }
                  class y extends TypeError {
                    constructor(t) {
                      super(
                        `Invalid format ${t}, must be one of "raw", "hex", "base64"`,
                      );
                    }
                  }
                  function w(t, e) {
                    switch (e) {
                      case "raw":
                        return t;
                      case "hex":
                        return t.toString("hex");
                      case "base64":
                        return t.toString("base64");
                      default:
                        throw new y(e);
                    }
                  }
                  function b(t, e) {
                    switch (e) {
                      case "raw":
                        return t;
                      case "hex":
                        return c.from(t, "hex");
                      case "base64":
                        return c.from(t, "base64");
                      default:
                        throw new y(e);
                    }
                  }
                  function m(t, e) {
                    return (
                      null != t &&
                      (t instanceof e ||
                        (_(t, e) &&
                          "function" == typeof t.constructor.read &&
                          "function" == typeof t.constructor.write &&
                          _(t, "XdrType")))
                    );
                  }
                  function _(t, e) {
                    do {
                      if (t.constructor.name === e) return !0;
                    } while ((t = Object.getPrototypeOf(t)));
                    return !1;
                  }
                  const v = 2147483647;
                  class E extends p {
                    static read(t) {
                      return t.readInt32BE();
                    }
                    static write(t, e) {
                      if ("number" != typeof t) throw new n("not a number");
                      if ((0 | t) !== t) throw new n("invalid i32 value");
                      e.writeInt32BE(t);
                    }
                    static isValid(t) {
                      return (
                        "number" == typeof t &&
                        (0 | t) === t &&
                        t >= -2147483648 &&
                        t <= v
                      );
                    }
                  }
                  function S(t, e, r) {
                    if ("bigint" != typeof t)
                      throw new TypeError(
                        "Expected bigint 'value', got " + typeof t,
                      );
                    const n = e / r;
                    if (1 === n) return [t];
                    if (r < 32 || r > 128 || (2 !== n && 4 !== n && 8 !== n))
                      throw new TypeError(
                        `invalid bigint (${t}) and slice size (${e} -> ${r}) combination`,
                      );
                    const i = BigInt(r),
                      o = new Array(n);
                    for (let e = 0; e < n; e++)
                      (o[e] = BigInt.asIntN(r, t)), (t >>= i);
                    return o;
                  }
                  function R(t, e) {
                    if (e) return [0n, (1n << BigInt(t)) - 1n];
                    const r = 1n << BigInt(t - 1);
                    return [0n - r, r - 1n];
                  }
                  (E.MAX_VALUE = v), (E.MIN_VALUE = 2147483648);
                  class B extends p {
                    constructor(t) {
                      super(),
                        (this._value = (function (t, e, r) {
                          t instanceof Array
                            ? t.length && t[0] instanceof Array && (t = t[0])
                            : (t = [t]);
                          const n = e / t.length;
                          switch (n) {
                            case 32:
                            case 64:
                            case 128:
                            case 256:
                              break;
                            default:
                              throw new RangeError(
                                `expected slices to fit in 32/64/128/256 bits, got ${t}`,
                              );
                          }
                          try {
                            for (let e = 0; e < t.length; e++)
                              "bigint" != typeof t[e] &&
                                (t[e] = BigInt(t[e].valueOf()));
                          } catch (e) {
                            throw new TypeError(
                              `expected bigint-like values, got: ${t} (${e})`,
                            );
                          }
                          if (r && 1 === t.length && t[0] < 0n)
                            throw new RangeError(
                              `expected a positive value, got: ${t}`,
                            );
                          let i = BigInt.asUintN(n, t[0]);
                          for (let e = 1; e < t.length; e++)
                            i |= BigInt.asUintN(n, t[e]) << BigInt(e * n);
                          r || (i = BigInt.asIntN(e, i));
                          const [o, s] = R(e, r);
                          if (i >= o && i <= s) return i;
                          throw new TypeError(
                            `bigint values [${t}] for ${(function (t, e) {
                              return `${e ? "u" : "i"}${t}`;
                            })(e, r)} out of range [${o}, ${s}]: ${i}`,
                          );
                        })(t, this.size, this.unsigned));
                    }
                    get unsigned() {
                      throw new s();
                    }
                    get size() {
                      throw new s();
                    }
                    slice(t) {
                      return S(this._value, this.size, t);
                    }
                    toString() {
                      return this._value.toString();
                    }
                    toJSON() {
                      return { _value: this._value.toString() };
                    }
                    toBigInt() {
                      return BigInt(this._value);
                    }
                    static read(t) {
                      const { size: e } = this.prototype;
                      return 64 === e
                        ? new this(t.readBigUInt64BE())
                        : new this(
                            ...Array.from({ length: e / 64 }, () =>
                              t.readBigUInt64BE(),
                            ).reverse(),
                          );
                    }
                    static write(t, e) {
                      if (t instanceof this) t = t._value;
                      else if (
                        "bigint" != typeof t ||
                        t > this.MAX_VALUE ||
                        t < this.MIN_VALUE
                      )
                        throw new n(`${t} is not a ${this.name}`);
                      const { unsigned: r, size: i } = this.prototype;
                      if (64 === i)
                        r ? e.writeBigUInt64BE(t) : e.writeBigInt64BE(t);
                      else
                        for (const n of S(t, i, 64).reverse())
                          r ? e.writeBigUInt64BE(n) : e.writeBigInt64BE(n);
                    }
                    static isValid(t) {
                      return "bigint" == typeof t || t instanceof this;
                    }
                    static fromString(t) {
                      return new this(t);
                    }
                    static MAX_VALUE = 0n;
                    static MIN_VALUE = 0n;
                    static defineIntBoundaries() {
                      const [t, e] = R(
                        this.prototype.size,
                        this.prototype.unsigned,
                      );
                      (this.MIN_VALUE = t), (this.MAX_VALUE = e);
                    }
                  }
                  class T extends B {
                    constructor(...t) {
                      super(t);
                    }
                    get low() {
                      return 0 | Number(0xffffffffn & this._value);
                    }
                    get high() {
                      return 0 | Number(this._value >> 32n);
                    }
                    get size() {
                      return 64;
                    }
                    get unsigned() {
                      return !1;
                    }
                    static fromBits(t, e) {
                      return new this(t, e);
                    }
                  }
                  T.defineIntBoundaries();
                  const A = 4294967295;
                  class x extends p {
                    static read(t) {
                      return t.readUInt32BE();
                    }
                    static write(t, e) {
                      if (
                        "number" != typeof t ||
                        !(t >= 0 && t <= A) ||
                        t % 1 != 0
                      )
                        throw new n("invalid u32 value");
                      e.writeUInt32BE(t);
                    }
                    static isValid(t) {
                      return (
                        "number" == typeof t && t % 1 == 0 && t >= 0 && t <= A
                      );
                    }
                  }
                  (x.MAX_VALUE = A), (x.MIN_VALUE = 0);
                  class I extends B {
                    constructor(...t) {
                      super(t);
                    }
                    get low() {
                      return 0 | Number(0xffffffffn & this._value);
                    }
                    get high() {
                      return 0 | Number(this._value >> 32n);
                    }
                    get size() {
                      return 64;
                    }
                    get unsigned() {
                      return !0;
                    }
                    static fromBits(t, e) {
                      return new this(t, e);
                    }
                  }
                  I.defineIntBoundaries();
                  class L extends p {
                    static read(t) {
                      return t.readFloatBE();
                    }
                    static write(t, e) {
                      if ("number" != typeof t) throw new n("not a number");
                      e.writeFloatBE(t);
                    }
                    static isValid(t) {
                      return "number" == typeof t;
                    }
                  }
                  class N extends p {
                    static read(t) {
                      return t.readDoubleBE();
                    }
                    static write(t, e) {
                      if ("number" != typeof t) throw new n("not a number");
                      e.writeDoubleBE(t);
                    }
                    static isValid(t) {
                      return "number" == typeof t;
                    }
                  }
                  class O extends p {
                    static read() {
                      throw new o("quadruple not supported");
                    }
                    static write() {
                      throw new o("quadruple not supported");
                    }
                    static isValid() {
                      return !1;
                    }
                  }
                  class U extends p {
                    static read(t) {
                      const e = E.read(t);
                      switch (e) {
                        case 0:
                          return !1;
                        case 1:
                          return !0;
                        default:
                          throw new i(`got ${e} when trying to read a bool`);
                      }
                    }
                    static write(t, e) {
                      const r = t ? 1 : 0;
                      E.write(r, e);
                    }
                    static isValid(t) {
                      return "boolean" == typeof t;
                    }
                  }
                  var k = r(616).A;
                  class M extends g {
                    constructor(t = x.MAX_VALUE) {
                      super(), (this._maxLength = t);
                    }
                    read(t) {
                      const e = x.read(t);
                      if (e > this._maxLength)
                        throw new i(
                          `saw ${e} length String, max allowed is ${this._maxLength}`,
                        );
                      return t.read(e);
                    }
                    readString(t) {
                      return this.read(t).toString("utf8");
                    }
                    write(t, e) {
                      const r =
                        "string" == typeof t
                          ? k.byteLength(t, "utf8")
                          : t.length;
                      if (r > this._maxLength)
                        throw new n(
                          `got ${t.length} bytes, max allowed is ${this._maxLength}`,
                        );
                      x.write(r, e), e.write(t, r);
                    }
                    isValid(t) {
                      return "string" == typeof t
                        ? k.byteLength(t, "utf8") <= this._maxLength
                        : !!(t instanceof Array || k.isBuffer(t)) &&
                            t.length <= this._maxLength;
                    }
                  }
                  var C = r(616).A;
                  class j extends g {
                    constructor(t) {
                      super(), (this._length = t);
                    }
                    read(t) {
                      return t.read(this._length);
                    }
                    write(t, e) {
                      const { length: r } = t;
                      if (r !== this._length)
                        throw new n(
                          `got ${t.length} bytes, expected ${this._length}`,
                        );
                      e.write(t, r);
                    }
                    isValid(t) {
                      return C.isBuffer(t) && t.length === this._length;
                    }
                  }
                  var P = r(616).A;
                  class D extends g {
                    constructor(t = x.MAX_VALUE) {
                      super(), (this._maxLength = t);
                    }
                    read(t) {
                      const e = x.read(t);
                      if (e > this._maxLength)
                        throw new i(
                          `saw ${e} length VarOpaque, max allowed is ${this._maxLength}`,
                        );
                      return t.read(e);
                    }
                    write(t, e) {
                      const { length: r } = t;
                      if (t.length > this._maxLength)
                        throw new n(
                          `got ${t.length} bytes, max allowed is ${this._maxLength}`,
                        );
                      x.write(r, e), e.write(t, r);
                    }
                    isValid(t) {
                      return P.isBuffer(t) && t.length <= this._maxLength;
                    }
                  }
                  class $ extends g {
                    constructor(t, e) {
                      super(), (this._childType = t), (this._length = e);
                    }
                    read(t) {
                      const e = new r.g.Array(this._length);
                      for (let r = 0; r < this._length; r++)
                        e[r] = this._childType.read(t);
                      return e;
                    }
                    write(t, e) {
                      if (!r.g.Array.isArray(t))
                        throw new n("value is not array");
                      if (t.length !== this._length)
                        throw new n(
                          `got array of size ${t.length}, expected ${this._length}`,
                        );
                      for (const r of t) this._childType.write(r, e);
                    }
                    isValid(t) {
                      if (
                        !(t instanceof r.g.Array) ||
                        t.length !== this._length
                      )
                        return !1;
                      for (const e of t)
                        if (!this._childType.isValid(e)) return !1;
                      return !0;
                    }
                  }
                  class V extends g {
                    constructor(t, e = x.MAX_VALUE) {
                      super(), (this._childType = t), (this._maxLength = e);
                    }
                    read(t) {
                      const e = x.read(t);
                      if (e > this._maxLength)
                        throw new i(
                          `saw ${e} length VarArray, max allowed is ${this._maxLength}`,
                        );
                      const r = new Array(e);
                      for (let n = 0; n < e; n++)
                        r[n] = this._childType.read(t);
                      return r;
                    }
                    write(t, e) {
                      if (!(t instanceof Array))
                        throw new n("value is not array");
                      if (t.length > this._maxLength)
                        throw new n(
                          `got array of size ${t.length}, max allowed is ${this._maxLength}`,
                        );
                      x.write(t.length, e);
                      for (const r of t) this._childType.write(r, e);
                    }
                    isValid(t) {
                      if (!(t instanceof Array) || t.length > this._maxLength)
                        return !1;
                      for (const e of t)
                        if (!this._childType.isValid(e)) return !1;
                      return !0;
                    }
                  }
                  class F extends p {
                    constructor(t) {
                      super(), (this._childType = t);
                    }
                    read(t) {
                      if (U.read(t)) return this._childType.read(t);
                    }
                    write(t, e) {
                      const r = null != t;
                      U.write(r, e), r && this._childType.write(t, e);
                    }
                    isValid(t) {
                      return null == t || this._childType.isValid(t);
                    }
                  }
                  class q extends p {
                    static read() {}
                    static write(t) {
                      if (void 0 !== t)
                        throw new n("trying to write value to a void slot");
                    }
                    static isValid(t) {
                      return void 0 === t;
                    }
                  }
                  class W extends p {
                    constructor(t, e) {
                      super(), (this.name = t), (this.value = e);
                    }
                    static read(t) {
                      const e = E.read(t),
                        r = this._byValue[e];
                      if (void 0 === r)
                        throw new i(
                          `unknown ${this.enumName} member for value ${e}`,
                        );
                      return r;
                    }
                    static write(t, e) {
                      if (!this.isValid(t))
                        throw new n(
                          `${t} has enum name ${t?.enumName}, not ${this.enumName}: ${JSON.stringify(t)}`,
                        );
                      E.write(t.value, e);
                    }
                    static isValid(t) {
                      return (
                        t?.constructor?.enumName === this.enumName || m(t, this)
                      );
                    }
                    static members() {
                      return this._members;
                    }
                    static values() {
                      return Object.values(this._members);
                    }
                    static fromName(t) {
                      const e = this._members[t];
                      if (!e)
                        throw new TypeError(
                          `${t} is not a member of ${this.enumName}`,
                        );
                      return e;
                    }
                    static fromValue(t) {
                      const e = this._byValue[t];
                      if (void 0 === e)
                        throw new TypeError(
                          `${t} is not a value of any member of ${this.enumName}`,
                        );
                      return e;
                    }
                    static create(t, e, r) {
                      const n = class extends W {};
                      (n.enumName = e),
                        (t.results[e] = n),
                        (n._members = {}),
                        (n._byValue = {});
                      for (const [t, e] of Object.entries(r)) {
                        const r = new n(t, e);
                        (n._members[t] = r),
                          (n._byValue[e] = r),
                          (n[t] = () => r);
                      }
                      return n;
                    }
                  }
                  class z extends p {
                    resolve() {
                      throw new o(
                        '"resolve" method should be implemented in the descendant class',
                      );
                    }
                  }
                  class H extends g {
                    constructor(t) {
                      super(), (this._attributes = t || {});
                    }
                    static read(t) {
                      const e = {};
                      for (const [r, n] of this._fields) e[r] = n.read(t);
                      return new this(e);
                    }
                    static write(t, e) {
                      if (!this.isValid(t))
                        throw new n(
                          `${t} has struct name ${t?.constructor?.structName}, not ${this.structName}: ${JSON.stringify(t)}`,
                        );
                      for (const [r, n] of this._fields) {
                        const i = t._attributes[r];
                        n.write(i, e);
                      }
                    }
                    static isValid(t) {
                      return (
                        t?.constructor?.structName === this.structName ||
                        m(t, this)
                      );
                    }
                    static create(t, e, r) {
                      const n = class extends H {};
                      (n.structName = e), (t.results[e] = n);
                      const i = new Array(r.length);
                      for (let e = 0; e < r.length; e++) {
                        const o = r[e],
                          s = o[0];
                        let a = o[1];
                        a instanceof z && (a = a.resolve(t)),
                          (i[e] = [s, a]),
                          (n.prototype[s] = X(s));
                      }
                      return (n._fields = i), n;
                    }
                  }
                  function X(t) {
                    return function (e) {
                      return (
                        void 0 !== e && (this._attributes[t] = e),
                        this._attributes[t]
                      );
                    };
                  }
                  class G extends g {
                    constructor(t, e) {
                      super(), this.set(t, e);
                    }
                    set(t, e) {
                      "string" == typeof t &&
                        (t = this.constructor._switchOn.fromName(t)),
                        (this._switch = t);
                      const r = this.constructor.armForSwitch(this._switch);
                      (this._arm = r),
                        (this._armType =
                          r === q ? q : this.constructor._arms[r]),
                        (this._value = e);
                    }
                    get(t = this._arm) {
                      if (this._arm !== q && this._arm !== t)
                        throw new TypeError(`${t} not set`);
                      return this._value;
                    }
                    switch() {
                      return this._switch;
                    }
                    arm() {
                      return this._arm;
                    }
                    armType() {
                      return this._armType;
                    }
                    value() {
                      return this._value;
                    }
                    static armForSwitch(t) {
                      const e = this._switches.get(t);
                      if (void 0 !== e) return e;
                      if (this._defaultArm) return this._defaultArm;
                      throw new TypeError(`Bad union switch: ${t}`);
                    }
                    static armTypeForArm(t) {
                      return t === q ? q : this._arms[t];
                    }
                    static read(t) {
                      const e = this._switchOn.read(t),
                        r = this.armForSwitch(e),
                        n = r === q ? q : this._arms[r];
                      let i;
                      return (
                        (i = void 0 !== n ? n.read(t) : r.read(t)),
                        new this(e, i)
                      );
                    }
                    static write(t, e) {
                      if (!this.isValid(t))
                        throw new n(
                          `${t} has union name ${t?.unionName}, not ${this.unionName}: ${JSON.stringify(t)}`,
                        );
                      this._switchOn.write(t.switch(), e),
                        t.armType().write(t.value(), e);
                    }
                    static isValid(t) {
                      return (
                        t?.constructor?.unionName === this.unionName ||
                        m(t, this)
                      );
                    }
                    static create(t, e, r) {
                      const n = class extends G {};
                      (n.unionName = e),
                        (t.results[e] = n),
                        r.switchOn instanceof z
                          ? (n._switchOn = r.switchOn.resolve(t))
                          : (n._switchOn = r.switchOn),
                        (n._switches = new Map()),
                        (n._arms = {});
                      let i = r.defaultArm;
                      i instanceof z && (i = i.resolve(t)), (n._defaultArm = i);
                      for (const [t, e] of r.switches) {
                        const r =
                          "string" == typeof t ? n._switchOn.fromName(t) : t;
                        n._switches.set(r, e);
                      }
                      if (void 0 !== n._switchOn.values)
                        for (const t of n._switchOn.values())
                          (n[t.name] = function (e) {
                            return new n(t, e);
                          }),
                            (n.prototype[t.name] = function (e) {
                              return this.set(t, e);
                            });
                      if (r.arms)
                        for (const [e, i] of Object.entries(r.arms))
                          (n._arms[e] = i instanceof z ? i.resolve(t) : i),
                            i !== q &&
                              (n.prototype[e] = function () {
                                return this.get(e);
                              });
                      return n;
                    }
                  }
                  class Y extends z {
                    constructor(t) {
                      super(), (this.name = t);
                    }
                    resolve(t) {
                      return t.definitions[this.name].resolve(t);
                    }
                  }
                  class J extends z {
                    constructor(t, e, r = !1) {
                      super(),
                        (this.childReference = t),
                        (this.length = e),
                        (this.variable = r);
                    }
                    resolve(t) {
                      let e = this.childReference,
                        r = this.length;
                      return (
                        e instanceof z && (e = e.resolve(t)),
                        r instanceof z && (r = r.resolve(t)),
                        this.variable ? new V(e, r) : new $(e, r)
                      );
                    }
                  }
                  class K extends z {
                    constructor(t) {
                      super(), (this.childReference = t), (this.name = t.name);
                    }
                    resolve(t) {
                      let e = this.childReference;
                      return e instanceof z && (e = e.resolve(t)), new F(e);
                    }
                  }
                  class Q extends z {
                    constructor(t, e) {
                      super(), (this.sizedType = t), (this.length = e);
                    }
                    resolve(t) {
                      let e = this.length;
                      return (
                        e instanceof z && (e = e.resolve(t)),
                        new this.sizedType(e)
                      );
                    }
                  }
                  class Z {
                    constructor(t, e, r) {
                      (this.constructor = t),
                        (this.name = e),
                        (this.config = r);
                    }
                    resolve(t) {
                      return this.name in t.results
                        ? t.results[this.name]
                        : this.constructor(t, this.name, this.config);
                    }
                  }
                  function tt(t, e, r) {
                    return (
                      r instanceof z && (r = r.resolve(t)),
                      (t.results[e] = r),
                      r
                    );
                  }
                  function et(t, e, r) {
                    return (t.results[e] = r), r;
                  }
                  class rt {
                    constructor(t) {
                      (this._destination = t), (this._definitions = {});
                    }
                    enum(t, e) {
                      const r = new Z(W.create, t, e);
                      this.define(t, r);
                    }
                    struct(t, e) {
                      const r = new Z(H.create, t, e);
                      this.define(t, r);
                    }
                    union(t, e) {
                      const r = new Z(G.create, t, e);
                      this.define(t, r);
                    }
                    typedef(t, e) {
                      const r = new Z(tt, t, e);
                      this.define(t, r);
                    }
                    const(t, e) {
                      const r = new Z(et, t, e);
                      this.define(t, r);
                    }
                    void() {
                      return q;
                    }
                    bool() {
                      return U;
                    }
                    int() {
                      return E;
                    }
                    hyper() {
                      return T;
                    }
                    uint() {
                      return x;
                    }
                    uhyper() {
                      return I;
                    }
                    float() {
                      return L;
                    }
                    double() {
                      return N;
                    }
                    quadruple() {
                      return O;
                    }
                    string(t) {
                      return new Q(M, t);
                    }
                    opaque(t) {
                      return new Q(j, t);
                    }
                    varOpaque(t) {
                      return new Q(D, t);
                    }
                    array(t, e) {
                      return new J(t, e);
                    }
                    varArray(t, e) {
                      return new J(t, e, !0);
                    }
                    option(t) {
                      return new K(t);
                    }
                    define(t, e) {
                      if (void 0 !== this._destination[t])
                        throw new o(`${t} is already defined`);
                      this._definitions[t] = e;
                    }
                    lookup(t) {
                      return new Y(t);
                    }
                    resolve() {
                      for (const t of Object.values(this._definitions))
                        t.resolve({
                          definitions: this._definitions,
                          results: this._destination,
                        });
                    }
                  }
                  function nt(t, e = {}) {
                    if (t) {
                      const r = new rt(e);
                      t(r), r.resolve();
                    }
                    return e;
                  }
                },
                526: (t, e) => {
                  "use strict";
                  (e.byteLength = function (t) {
                    var e = a(t),
                      r = e[0],
                      n = e[1];
                    return (3 * (r + n)) / 4 - n;
                  }),
                    (e.toByteArray = function (t) {
                      var e,
                        r,
                        o = a(t),
                        s = o[0],
                        u = o[1],
                        f = new i(
                          (function (t, e, r) {
                            return (3 * (e + r)) / 4 - r;
                          })(0, s, u),
                        ),
                        h = 0,
                        l = u > 0 ? s - 4 : s;
                      for (r = 0; r < l; r += 4)
                        (e =
                          (n[t.charCodeAt(r)] << 18) |
                          (n[t.charCodeAt(r + 1)] << 12) |
                          (n[t.charCodeAt(r + 2)] << 6) |
                          n[t.charCodeAt(r + 3)]),
                          (f[h++] = (e >> 16) & 255),
                          (f[h++] = (e >> 8) & 255),
                          (f[h++] = 255 & e);
                      return (
                        2 === u &&
                          ((e =
                            (n[t.charCodeAt(r)] << 2) |
                            (n[t.charCodeAt(r + 1)] >> 4)),
                          (f[h++] = 255 & e)),
                        1 === u &&
                          ((e =
                            (n[t.charCodeAt(r)] << 10) |
                            (n[t.charCodeAt(r + 1)] << 4) |
                            (n[t.charCodeAt(r + 2)] >> 2)),
                          (f[h++] = (e >> 8) & 255),
                          (f[h++] = 255 & e)),
                        f
                      );
                    }),
                    (e.fromByteArray = function (t) {
                      for (
                        var e,
                          n = t.length,
                          i = n % 3,
                          o = [],
                          s = 16383,
                          a = 0,
                          f = n - i;
                        a < f;
                        a += s
                      )
                        o.push(u(t, a, a + s > f ? f : a + s));
                      return (
                        1 === i
                          ? ((e = t[n - 1]),
                            o.push(r[e >> 2] + r[(e << 4) & 63] + "=="))
                          : 2 === i &&
                            ((e = (t[n - 2] << 8) + t[n - 1]),
                            o.push(
                              r[e >> 10] +
                                r[(e >> 4) & 63] +
                                r[(e << 2) & 63] +
                                "=",
                            )),
                        o.join("")
                      );
                    });
                  for (
                    var r = [],
                      n = [],
                      i = "undefined" != typeof Uint8Array ? Uint8Array : Array,
                      o =
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                      s = 0;
                    s < 64;
                    ++s
                  )
                    (r[s] = o[s]), (n[o.charCodeAt(s)] = s);
                  function a(t) {
                    var e = t.length;
                    if (e % 4 > 0)
                      throw new Error(
                        "Invalid string. Length must be a multiple of 4",
                      );
                    var r = t.indexOf("=");
                    return -1 === r && (r = e), [r, r === e ? 0 : 4 - (r % 4)];
                  }
                  function u(t, e, n) {
                    for (var i, o, s = [], a = e; a < n; a += 3)
                      (i =
                        ((t[a] << 16) & 16711680) +
                        ((t[a + 1] << 8) & 65280) +
                        (255 & t[a + 2])),
                        s.push(
                          r[((o = i) >> 18) & 63] +
                            r[(o >> 12) & 63] +
                            r[(o >> 6) & 63] +
                            r[63 & o],
                        );
                    return s.join("");
                  }
                  (n["-".charCodeAt(0)] = 62), (n["_".charCodeAt(0)] = 63);
                },
                287: (t, e, r) => {
                  "use strict";
                  const n = r(526),
                    i = r(251),
                    o =
                      "function" == typeof Symbol &&
                      "function" == typeof Symbol.for
                        ? Symbol.for("nodejs.util.inspect.custom")
                        : null;
                  (e.hp = u), (e.IS = 50);
                  const s = 2147483647;
                  function a(t) {
                    if (t > s)
                      throw new RangeError(
                        'The value "' + t + '" is invalid for option "size"',
                      );
                    const e = new Uint8Array(t);
                    return Object.setPrototypeOf(e, u.prototype), e;
                  }
                  function u(t, e, r) {
                    if ("number" == typeof t) {
                      if ("string" == typeof e)
                        throw new TypeError(
                          'The "string" argument must be of type string. Received type number',
                        );
                      return l(t);
                    }
                    return f(t, e, r);
                  }
                  function f(t, e, r) {
                    if ("string" == typeof t)
                      return (function (t, e) {
                        if (
                          (("string" == typeof e && "" !== e) || (e = "utf8"),
                          !u.isEncoding(e))
                        )
                          throw new TypeError("Unknown encoding: " + e);
                        const r = 0 | g(t, e);
                        let n = a(r);
                        const i = n.write(t, e);
                        return i !== r && (n = n.slice(0, i)), n;
                      })(t, e);
                    if (ArrayBuffer.isView(t))
                      return (function (t) {
                        if (Y(t, Uint8Array)) {
                          const e = new Uint8Array(t);
                          return d(e.buffer, e.byteOffset, e.byteLength);
                        }
                        return c(t);
                      })(t);
                    if (null == t)
                      throw new TypeError(
                        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                          typeof t,
                      );
                    if (Y(t, ArrayBuffer) || (t && Y(t.buffer, ArrayBuffer)))
                      return d(t, e, r);
                    if (
                      "undefined" != typeof SharedArrayBuffer &&
                      (Y(t, SharedArrayBuffer) ||
                        (t && Y(t.buffer, SharedArrayBuffer)))
                    )
                      return d(t, e, r);
                    if ("number" == typeof t)
                      throw new TypeError(
                        'The "value" argument must not be of type number. Received type number',
                      );
                    const n = t.valueOf && t.valueOf();
                    if (null != n && n !== t) return u.from(n, e, r);
                    const i = (function (t) {
                      if (u.isBuffer(t)) {
                        const e = 0 | p(t.length),
                          r = a(e);
                        return 0 === r.length || t.copy(r, 0, 0, e), r;
                      }
                      return void 0 !== t.length
                        ? "number" != typeof t.length || J(t.length)
                          ? a(0)
                          : c(t)
                        : "Buffer" === t.type && Array.isArray(t.data)
                          ? c(t.data)
                          : void 0;
                    })(t);
                    if (i) return i;
                    if (
                      "undefined" != typeof Symbol &&
                      null != Symbol.toPrimitive &&
                      "function" == typeof t[Symbol.toPrimitive]
                    )
                      return u.from(t[Symbol.toPrimitive]("string"), e, r);
                    throw new TypeError(
                      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                        typeof t,
                    );
                  }
                  function h(t) {
                    if ("number" != typeof t)
                      throw new TypeError(
                        '"size" argument must be of type number',
                      );
                    if (t < 0)
                      throw new RangeError(
                        'The value "' + t + '" is invalid for option "size"',
                      );
                  }
                  function l(t) {
                    return h(t), a(t < 0 ? 0 : 0 | p(t));
                  }
                  function c(t) {
                    const e = t.length < 0 ? 0 : 0 | p(t.length),
                      r = a(e);
                    for (let n = 0; n < e; n += 1) r[n] = 255 & t[n];
                    return r;
                  }
                  function d(t, e, r) {
                    if (e < 0 || t.byteLength < e)
                      throw new RangeError(
                        '"offset" is outside of buffer bounds',
                      );
                    if (t.byteLength < e + (r || 0))
                      throw new RangeError(
                        '"length" is outside of buffer bounds',
                      );
                    let n;
                    return (
                      (n =
                        void 0 === e && void 0 === r
                          ? new Uint8Array(t)
                          : void 0 === r
                            ? new Uint8Array(t, e)
                            : new Uint8Array(t, e, r)),
                      Object.setPrototypeOf(n, u.prototype),
                      n
                    );
                  }
                  function p(t) {
                    if (t >= s)
                      throw new RangeError(
                        "Attempt to allocate Buffer larger than maximum size: 0x" +
                          s.toString(16) +
                          " bytes",
                      );
                    return 0 | t;
                  }
                  function g(t, e) {
                    if (u.isBuffer(t)) return t.length;
                    if (ArrayBuffer.isView(t) || Y(t, ArrayBuffer))
                      return t.byteLength;
                    if ("string" != typeof t)
                      throw new TypeError(
                        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                          typeof t,
                      );
                    const r = t.length,
                      n = arguments.length > 2 && !0 === arguments[2];
                    if (!n && 0 === r) return 0;
                    let i = !1;
                    for (;;)
                      switch (e) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                          return r;
                        case "utf8":
                        case "utf-8":
                          return H(t).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                          return 2 * r;
                        case "hex":
                          return r >>> 1;
                        case "base64":
                          return X(t).length;
                        default:
                          if (i) return n ? -1 : H(t).length;
                          (e = ("" + e).toLowerCase()), (i = !0);
                      }
                  }
                  function y(t, e, r) {
                    let n = !1;
                    if (((void 0 === e || e < 0) && (e = 0), e > this.length))
                      return "";
                    if (
                      ((void 0 === r || r > this.length) && (r = this.length),
                      r <= 0)
                    )
                      return "";
                    if ((r >>>= 0) <= (e >>>= 0)) return "";
                    for (t || (t = "utf8"); ; )
                      switch (t) {
                        case "hex":
                          return L(this, e, r);
                        case "utf8":
                        case "utf-8":
                          return T(this, e, r);
                        case "ascii":
                          return x(this, e, r);
                        case "latin1":
                        case "binary":
                          return I(this, e, r);
                        case "base64":
                          return B(this, e, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                          return N(this, e, r);
                        default:
                          if (n) throw new TypeError("Unknown encoding: " + t);
                          (t = (t + "").toLowerCase()), (n = !0);
                      }
                  }
                  function w(t, e, r) {
                    const n = t[e];
                    (t[e] = t[r]), (t[r] = n);
                  }
                  function b(t, e, r, n, i) {
                    if (0 === t.length) return -1;
                    if (
                      ("string" == typeof r
                        ? ((n = r), (r = 0))
                        : r > 2147483647
                          ? (r = 2147483647)
                          : r < -2147483648 && (r = -2147483648),
                      J((r = +r)) && (r = i ? 0 : t.length - 1),
                      r < 0 && (r = t.length + r),
                      r >= t.length)
                    ) {
                      if (i) return -1;
                      r = t.length - 1;
                    } else if (r < 0) {
                      if (!i) return -1;
                      r = 0;
                    }
                    if (
                      ("string" == typeof e && (e = u.from(e, n)),
                      u.isBuffer(e))
                    )
                      return 0 === e.length ? -1 : m(t, e, r, n, i);
                    if ("number" == typeof e)
                      return (
                        (e &= 255),
                        "function" == typeof Uint8Array.prototype.indexOf
                          ? i
                            ? Uint8Array.prototype.indexOf.call(t, e, r)
                            : Uint8Array.prototype.lastIndexOf.call(t, e, r)
                          : m(t, [e], r, n, i)
                      );
                    throw new TypeError("val must be string, number or Buffer");
                  }
                  function m(t, e, r, n, i) {
                    let o,
                      s = 1,
                      a = t.length,
                      u = e.length;
                    if (
                      void 0 !== n &&
                      ("ucs2" === (n = String(n).toLowerCase()) ||
                        "ucs-2" === n ||
                        "utf16le" === n ||
                        "utf-16le" === n)
                    ) {
                      if (t.length < 2 || e.length < 2) return -1;
                      (s = 2), (a /= 2), (u /= 2), (r /= 2);
                    }
                    function f(t, e) {
                      return 1 === s ? t[e] : t.readUInt16BE(e * s);
                    }
                    if (i) {
                      let n = -1;
                      for (o = r; o < a; o++)
                        if (f(t, o) === f(e, -1 === n ? 0 : o - n)) {
                          if ((-1 === n && (n = o), o - n + 1 === u))
                            return n * s;
                        } else -1 !== n && (o -= o - n), (n = -1);
                    } else
                      for (r + u > a && (r = a - u), o = r; o >= 0; o--) {
                        let r = !0;
                        for (let n = 0; n < u; n++)
                          if (f(t, o + n) !== f(e, n)) {
                            r = !1;
                            break;
                          }
                        if (r) return o;
                      }
                    return -1;
                  }
                  function _(t, e, r, n) {
                    r = Number(r) || 0;
                    const i = t.length - r;
                    n ? (n = Number(n)) > i && (n = i) : (n = i);
                    const o = e.length;
                    let s;
                    for (n > o / 2 && (n = o / 2), s = 0; s < n; ++s) {
                      const n = parseInt(e.substr(2 * s, 2), 16);
                      if (J(n)) return s;
                      t[r + s] = n;
                    }
                    return s;
                  }
                  function v(t, e, r, n) {
                    return G(H(e, t.length - r), t, r, n);
                  }
                  function E(t, e, r, n) {
                    return G(
                      (function (t) {
                        const e = [];
                        for (let r = 0; r < t.length; ++r)
                          e.push(255 & t.charCodeAt(r));
                        return e;
                      })(e),
                      t,
                      r,
                      n,
                    );
                  }
                  function S(t, e, r, n) {
                    return G(X(e), t, r, n);
                  }
                  function R(t, e, r, n) {
                    return G(
                      (function (t, e) {
                        let r, n, i;
                        const o = [];
                        for (let s = 0; s < t.length && !((e -= 2) < 0); ++s)
                          (r = t.charCodeAt(s)),
                            (n = r >> 8),
                            (i = r % 256),
                            o.push(i),
                            o.push(n);
                        return o;
                      })(e, t.length - r),
                      t,
                      r,
                      n,
                    );
                  }
                  function B(t, e, r) {
                    return 0 === e && r === t.length
                      ? n.fromByteArray(t)
                      : n.fromByteArray(t.slice(e, r));
                  }
                  function T(t, e, r) {
                    r = Math.min(t.length, r);
                    const n = [];
                    let i = e;
                    for (; i < r; ) {
                      const e = t[i];
                      let o = null,
                        s = e > 239 ? 4 : e > 223 ? 3 : e > 191 ? 2 : 1;
                      if (i + s <= r) {
                        let r, n, a, u;
                        switch (s) {
                          case 1:
                            e < 128 && (o = e);
                            break;
                          case 2:
                            (r = t[i + 1]),
                              128 == (192 & r) &&
                                ((u = ((31 & e) << 6) | (63 & r)),
                                u > 127 && (o = u));
                            break;
                          case 3:
                            (r = t[i + 1]),
                              (n = t[i + 2]),
                              128 == (192 & r) &&
                                128 == (192 & n) &&
                                ((u =
                                  ((15 & e) << 12) |
                                  ((63 & r) << 6) |
                                  (63 & n)),
                                u > 2047 &&
                                  (u < 55296 || u > 57343) &&
                                  (o = u));
                            break;
                          case 4:
                            (r = t[i + 1]),
                              (n = t[i + 2]),
                              (a = t[i + 3]),
                              128 == (192 & r) &&
                                128 == (192 & n) &&
                                128 == (192 & a) &&
                                ((u =
                                  ((15 & e) << 18) |
                                  ((63 & r) << 12) |
                                  ((63 & n) << 6) |
                                  (63 & a)),
                                u > 65535 && u < 1114112 && (o = u));
                        }
                      }
                      null === o
                        ? ((o = 65533), (s = 1))
                        : o > 65535 &&
                          ((o -= 65536),
                          n.push(((o >>> 10) & 1023) | 55296),
                          (o = 56320 | (1023 & o))),
                        n.push(o),
                        (i += s);
                    }
                    return (function (t) {
                      const e = t.length;
                      if (e <= A) return String.fromCharCode.apply(String, t);
                      let r = "",
                        n = 0;
                      for (; n < e; )
                        r += String.fromCharCode.apply(
                          String,
                          t.slice(n, (n += A)),
                        );
                      return r;
                    })(n);
                  }
                  (u.TYPED_ARRAY_SUPPORT = (function () {
                    try {
                      const t = new Uint8Array(1),
                        e = {
                          foo: function () {
                            return 42;
                          },
                        };
                      return (
                        Object.setPrototypeOf(e, Uint8Array.prototype),
                        Object.setPrototypeOf(t, e),
                        42 === t.foo()
                      );
                    } catch (t) {
                      return !1;
                    }
                  })()),
                    u.TYPED_ARRAY_SUPPORT ||
                      "undefined" == typeof console ||
                      "function" != typeof console.error ||
                      console.error(
                        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.",
                      ),
                    Object.defineProperty(u.prototype, "parent", {
                      enumerable: !0,
                      get: function () {
                        if (u.isBuffer(this)) return this.buffer;
                      },
                    }),
                    Object.defineProperty(u.prototype, "offset", {
                      enumerable: !0,
                      get: function () {
                        if (u.isBuffer(this)) return this.byteOffset;
                      },
                    }),
                    (u.poolSize = 8192),
                    (u.from = function (t, e, r) {
                      return f(t, e, r);
                    }),
                    Object.setPrototypeOf(u.prototype, Uint8Array.prototype),
                    Object.setPrototypeOf(u, Uint8Array),
                    (u.alloc = function (t, e, r) {
                      return (function (t, e, r) {
                        return (
                          h(t),
                          t <= 0
                            ? a(t)
                            : void 0 !== e
                              ? "string" == typeof r
                                ? a(t).fill(e, r)
                                : a(t).fill(e)
                              : a(t)
                        );
                      })(t, e, r);
                    }),
                    (u.allocUnsafe = function (t) {
                      return l(t);
                    }),
                    (u.allocUnsafeSlow = function (t) {
                      return l(t);
                    }),
                    (u.isBuffer = function (t) {
                      return (
                        null != t && !0 === t._isBuffer && t !== u.prototype
                      );
                    }),
                    (u.compare = function (t, e) {
                      if (
                        (Y(t, Uint8Array) &&
                          (t = u.from(t, t.offset, t.byteLength)),
                        Y(e, Uint8Array) &&
                          (e = u.from(e, e.offset, e.byteLength)),
                        !u.isBuffer(t) || !u.isBuffer(e))
                      )
                        throw new TypeError(
                          'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array',
                        );
                      if (t === e) return 0;
                      let r = t.length,
                        n = e.length;
                      for (let i = 0, o = Math.min(r, n); i < o; ++i)
                        if (t[i] !== e[i]) {
                          (r = t[i]), (n = e[i]);
                          break;
                        }
                      return r < n ? -1 : n < r ? 1 : 0;
                    }),
                    (u.isEncoding = function (t) {
                      switch (String(t).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                          return !0;
                        default:
                          return !1;
                      }
                    }),
                    (u.concat = function (t, e) {
                      if (!Array.isArray(t))
                        throw new TypeError(
                          '"list" argument must be an Array of Buffers',
                        );
                      if (0 === t.length) return u.alloc(0);
                      let r;
                      if (void 0 === e)
                        for (e = 0, r = 0; r < t.length; ++r) e += t[r].length;
                      const n = u.allocUnsafe(e);
                      let i = 0;
                      for (r = 0; r < t.length; ++r) {
                        let e = t[r];
                        if (Y(e, Uint8Array))
                          i + e.length > n.length
                            ? (u.isBuffer(e) || (e = u.from(e)), e.copy(n, i))
                            : Uint8Array.prototype.set.call(n, e, i);
                        else {
                          if (!u.isBuffer(e))
                            throw new TypeError(
                              '"list" argument must be an Array of Buffers',
                            );
                          e.copy(n, i);
                        }
                        i += e.length;
                      }
                      return n;
                    }),
                    (u.byteLength = g),
                    (u.prototype._isBuffer = !0),
                    (u.prototype.swap16 = function () {
                      const t = this.length;
                      if (t % 2 != 0)
                        throw new RangeError(
                          "Buffer size must be a multiple of 16-bits",
                        );
                      for (let e = 0; e < t; e += 2) w(this, e, e + 1);
                      return this;
                    }),
                    (u.prototype.swap32 = function () {
                      const t = this.length;
                      if (t % 4 != 0)
                        throw new RangeError(
                          "Buffer size must be a multiple of 32-bits",
                        );
                      for (let e = 0; e < t; e += 4)
                        w(this, e, e + 3), w(this, e + 1, e + 2);
                      return this;
                    }),
                    (u.prototype.swap64 = function () {
                      const t = this.length;
                      if (t % 8 != 0)
                        throw new RangeError(
                          "Buffer size must be a multiple of 64-bits",
                        );
                      for (let e = 0; e < t; e += 8)
                        w(this, e, e + 7),
                          w(this, e + 1, e + 6),
                          w(this, e + 2, e + 5),
                          w(this, e + 3, e + 4);
                      return this;
                    }),
                    (u.prototype.toString = function () {
                      const t = this.length;
                      return 0 === t
                        ? ""
                        : 0 === arguments.length
                          ? T(this, 0, t)
                          : y.apply(this, arguments);
                    }),
                    (u.prototype.toLocaleString = u.prototype.toString),
                    (u.prototype.equals = function (t) {
                      if (!u.isBuffer(t))
                        throw new TypeError("Argument must be a Buffer");
                      return this === t || 0 === u.compare(this, t);
                    }),
                    (u.prototype.inspect = function () {
                      let t = "";
                      const r = e.IS;
                      return (
                        (t = this.toString("hex", 0, r)
                          .replace(/(.{2})/g, "$1 ")
                          .trim()),
                        this.length > r && (t += " ... "),
                        "<Buffer " + t + ">"
                      );
                    }),
                    o && (u.prototype[o] = u.prototype.inspect),
                    (u.prototype.compare = function (t, e, r, n, i) {
                      if (
                        (Y(t, Uint8Array) &&
                          (t = u.from(t, t.offset, t.byteLength)),
                        !u.isBuffer(t))
                      )
                        throw new TypeError(
                          'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                            typeof t,
                        );
                      if (
                        (void 0 === e && (e = 0),
                        void 0 === r && (r = t ? t.length : 0),
                        void 0 === n && (n = 0),
                        void 0 === i && (i = this.length),
                        e < 0 || r > t.length || n < 0 || i > this.length)
                      )
                        throw new RangeError("out of range index");
                      if (n >= i && e >= r) return 0;
                      if (n >= i) return -1;
                      if (e >= r) return 1;
                      if (this === t) return 0;
                      let o = (i >>>= 0) - (n >>>= 0),
                        s = (r >>>= 0) - (e >>>= 0);
                      const a = Math.min(o, s),
                        f = this.slice(n, i),
                        h = t.slice(e, r);
                      for (let t = 0; t < a; ++t)
                        if (f[t] !== h[t]) {
                          (o = f[t]), (s = h[t]);
                          break;
                        }
                      return o < s ? -1 : s < o ? 1 : 0;
                    }),
                    (u.prototype.includes = function (t, e, r) {
                      return -1 !== this.indexOf(t, e, r);
                    }),
                    (u.prototype.indexOf = function (t, e, r) {
                      return b(this, t, e, r, !0);
                    }),
                    (u.prototype.lastIndexOf = function (t, e, r) {
                      return b(this, t, e, r, !1);
                    }),
                    (u.prototype.write = function (t, e, r, n) {
                      if (void 0 === e)
                        (n = "utf8"), (r = this.length), (e = 0);
                      else if (void 0 === r && "string" == typeof e)
                        (n = e), (r = this.length), (e = 0);
                      else {
                        if (!isFinite(e))
                          throw new Error(
                            "Buffer.write(string, encoding, offset[, length]) is no longer supported",
                          );
                        (e >>>= 0),
                          isFinite(r)
                            ? ((r >>>= 0), void 0 === n && (n = "utf8"))
                            : ((n = r), (r = void 0));
                      }
                      const i = this.length - e;
                      if (
                        ((void 0 === r || r > i) && (r = i),
                        (t.length > 0 && (r < 0 || e < 0)) || e > this.length)
                      )
                        throw new RangeError(
                          "Attempt to write outside buffer bounds",
                        );
                      n || (n = "utf8");
                      let o = !1;
                      for (;;)
                        switch (n) {
                          case "hex":
                            return _(this, t, e, r);
                          case "utf8":
                          case "utf-8":
                            return v(this, t, e, r);
                          case "ascii":
                          case "latin1":
                          case "binary":
                            return E(this, t, e, r);
                          case "base64":
                            return S(this, t, e, r);
                          case "ucs2":
                          case "ucs-2":
                          case "utf16le":
                          case "utf-16le":
                            return R(this, t, e, r);
                          default:
                            if (o)
                              throw new TypeError("Unknown encoding: " + n);
                            (n = ("" + n).toLowerCase()), (o = !0);
                        }
                    }),
                    (u.prototype.toJSON = function () {
                      return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0),
                      };
                    });
                  const A = 4096;
                  function x(t, e, r) {
                    let n = "";
                    r = Math.min(t.length, r);
                    for (let i = e; i < r; ++i)
                      n += String.fromCharCode(127 & t[i]);
                    return n;
                  }
                  function I(t, e, r) {
                    let n = "";
                    r = Math.min(t.length, r);
                    for (let i = e; i < r; ++i) n += String.fromCharCode(t[i]);
                    return n;
                  }
                  function L(t, e, r) {
                    const n = t.length;
                    (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);
                    let i = "";
                    for (let n = e; n < r; ++n) i += K[t[n]];
                    return i;
                  }
                  function N(t, e, r) {
                    const n = t.slice(e, r);
                    let i = "";
                    for (let t = 0; t < n.length - 1; t += 2)
                      i += String.fromCharCode(n[t] + 256 * n[t + 1]);
                    return i;
                  }
                  function O(t, e, r) {
                    if (t % 1 != 0 || t < 0)
                      throw new RangeError("offset is not uint");
                    if (t + e > r)
                      throw new RangeError(
                        "Trying to access beyond buffer length",
                      );
                  }
                  function U(t, e, r, n, i, o) {
                    if (!u.isBuffer(t))
                      throw new TypeError(
                        '"buffer" argument must be a Buffer instance',
                      );
                    if (e > i || e < o)
                      throw new RangeError('"value" argument is out of bounds');
                    if (r + n > t.length)
                      throw new RangeError("Index out of range");
                  }
                  function k(t, e, r, n, i) {
                    F(e, n, i, t, r, 7);
                    let o = Number(e & BigInt(4294967295));
                    (t[r++] = o),
                      (o >>= 8),
                      (t[r++] = o),
                      (o >>= 8),
                      (t[r++] = o),
                      (o >>= 8),
                      (t[r++] = o);
                    let s = Number((e >> BigInt(32)) & BigInt(4294967295));
                    return (
                      (t[r++] = s),
                      (s >>= 8),
                      (t[r++] = s),
                      (s >>= 8),
                      (t[r++] = s),
                      (s >>= 8),
                      (t[r++] = s),
                      r
                    );
                  }
                  function M(t, e, r, n, i) {
                    F(e, n, i, t, r, 7);
                    let o = Number(e & BigInt(4294967295));
                    (t[r + 7] = o),
                      (o >>= 8),
                      (t[r + 6] = o),
                      (o >>= 8),
                      (t[r + 5] = o),
                      (o >>= 8),
                      (t[r + 4] = o);
                    let s = Number((e >> BigInt(32)) & BigInt(4294967295));
                    return (
                      (t[r + 3] = s),
                      (s >>= 8),
                      (t[r + 2] = s),
                      (s >>= 8),
                      (t[r + 1] = s),
                      (s >>= 8),
                      (t[r] = s),
                      r + 8
                    );
                  }
                  function C(t, e, r, n, i, o) {
                    if (r + n > t.length)
                      throw new RangeError("Index out of range");
                    if (r < 0) throw new RangeError("Index out of range");
                  }
                  function j(t, e, r, n, o) {
                    return (
                      (e = +e),
                      (r >>>= 0),
                      o || C(t, 0, r, 4),
                      i.write(t, e, r, n, 23, 4),
                      r + 4
                    );
                  }
                  function P(t, e, r, n, o) {
                    return (
                      (e = +e),
                      (r >>>= 0),
                      o || C(t, 0, r, 8),
                      i.write(t, e, r, n, 52, 8),
                      r + 8
                    );
                  }
                  (u.prototype.slice = function (t, e) {
                    const r = this.length;
                    (t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
                      (e = void 0 === e ? r : ~~e) < 0
                        ? (e += r) < 0 && (e = 0)
                        : e > r && (e = r),
                      e < t && (e = t);
                    const n = this.subarray(t, e);
                    return Object.setPrototypeOf(n, u.prototype), n;
                  }),
                    (u.prototype.readUintLE = u.prototype.readUIntLE =
                      function (t, e, r) {
                        (t >>>= 0), (e >>>= 0), r || O(t, e, this.length);
                        let n = this[t],
                          i = 1,
                          o = 0;
                        for (; ++o < e && (i *= 256); ) n += this[t + o] * i;
                        return n;
                      }),
                    (u.prototype.readUintBE = u.prototype.readUIntBE =
                      function (t, e, r) {
                        (t >>>= 0), (e >>>= 0), r || O(t, e, this.length);
                        let n = this[t + --e],
                          i = 1;
                        for (; e > 0 && (i *= 256); ) n += this[t + --e] * i;
                        return n;
                      }),
                    (u.prototype.readUint8 = u.prototype.readUInt8 =
                      function (t, e) {
                        return (t >>>= 0), e || O(t, 1, this.length), this[t];
                      }),
                    (u.prototype.readUint16LE = u.prototype.readUInt16LE =
                      function (t, e) {
                        return (
                          (t >>>= 0),
                          e || O(t, 2, this.length),
                          this[t] | (this[t + 1] << 8)
                        );
                      }),
                    (u.prototype.readUint16BE = u.prototype.readUInt16BE =
                      function (t, e) {
                        return (
                          (t >>>= 0),
                          e || O(t, 2, this.length),
                          (this[t] << 8) | this[t + 1]
                        );
                      }),
                    (u.prototype.readUint32LE = u.prototype.readUInt32LE =
                      function (t, e) {
                        return (
                          (t >>>= 0),
                          e || O(t, 4, this.length),
                          (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
                            16777216 * this[t + 3]
                        );
                      }),
                    (u.prototype.readUint32BE = u.prototype.readUInt32BE =
                      function (t, e) {
                        return (
                          (t >>>= 0),
                          e || O(t, 4, this.length),
                          16777216 * this[t] +
                            ((this[t + 1] << 16) |
                              (this[t + 2] << 8) |
                              this[t + 3])
                        );
                      }),
                    (u.prototype.readBigUInt64LE = Q(function (t) {
                      q((t >>>= 0), "offset");
                      const e = this[t],
                        r = this[t + 7];
                      (void 0 !== e && void 0 !== r) || W(t, this.length - 8);
                      const n =
                          e +
                          256 * this[++t] +
                          65536 * this[++t] +
                          this[++t] * 2 ** 24,
                        i =
                          this[++t] +
                          256 * this[++t] +
                          65536 * this[++t] +
                          r * 2 ** 24;
                      return BigInt(n) + (BigInt(i) << BigInt(32));
                    })),
                    (u.prototype.readBigUInt64BE = Q(function (t) {
                      q((t >>>= 0), "offset");
                      const e = this[t],
                        r = this[t + 7];
                      (void 0 !== e && void 0 !== r) || W(t, this.length - 8);
                      const n =
                          e * 2 ** 24 +
                          65536 * this[++t] +
                          256 * this[++t] +
                          this[++t],
                        i =
                          this[++t] * 2 ** 24 +
                          65536 * this[++t] +
                          256 * this[++t] +
                          r;
                      return (BigInt(n) << BigInt(32)) + BigInt(i);
                    })),
                    (u.prototype.readIntLE = function (t, e, r) {
                      (t >>>= 0), (e >>>= 0), r || O(t, e, this.length);
                      let n = this[t],
                        i = 1,
                        o = 0;
                      for (; ++o < e && (i *= 256); ) n += this[t + o] * i;
                      return (i *= 128), n >= i && (n -= Math.pow(2, 8 * e)), n;
                    }),
                    (u.prototype.readIntBE = function (t, e, r) {
                      (t >>>= 0), (e >>>= 0), r || O(t, e, this.length);
                      let n = e,
                        i = 1,
                        o = this[t + --n];
                      for (; n > 0 && (i *= 256); ) o += this[t + --n] * i;
                      return (i *= 128), o >= i && (o -= Math.pow(2, 8 * e)), o;
                    }),
                    (u.prototype.readInt8 = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 1, this.length),
                        128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
                      );
                    }),
                    (u.prototype.readInt16LE = function (t, e) {
                      (t >>>= 0), e || O(t, 2, this.length);
                      const r = this[t] | (this[t + 1] << 8);
                      return 32768 & r ? 4294901760 | r : r;
                    }),
                    (u.prototype.readInt16BE = function (t, e) {
                      (t >>>= 0), e || O(t, 2, this.length);
                      const r = this[t + 1] | (this[t] << 8);
                      return 32768 & r ? 4294901760 | r : r;
                    }),
                    (u.prototype.readInt32LE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 4, this.length),
                        this[t] |
                          (this[t + 1] << 8) |
                          (this[t + 2] << 16) |
                          (this[t + 3] << 24)
                      );
                    }),
                    (u.prototype.readInt32BE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 4, this.length),
                        (this[t] << 24) |
                          (this[t + 1] << 16) |
                          (this[t + 2] << 8) |
                          this[t + 3]
                      );
                    }),
                    (u.prototype.readBigInt64LE = Q(function (t) {
                      q((t >>>= 0), "offset");
                      const e = this[t],
                        r = this[t + 7];
                      (void 0 !== e && void 0 !== r) || W(t, this.length - 8);
                      const n =
                        this[t + 4] +
                        256 * this[t + 5] +
                        65536 * this[t + 6] +
                        (r << 24);
                      return (
                        (BigInt(n) << BigInt(32)) +
                        BigInt(
                          e +
                            256 * this[++t] +
                            65536 * this[++t] +
                            this[++t] * 2 ** 24,
                        )
                      );
                    })),
                    (u.prototype.readBigInt64BE = Q(function (t) {
                      q((t >>>= 0), "offset");
                      const e = this[t],
                        r = this[t + 7];
                      (void 0 !== e && void 0 !== r) || W(t, this.length - 8);
                      const n =
                        (e << 24) +
                        65536 * this[++t] +
                        256 * this[++t] +
                        this[++t];
                      return (
                        (BigInt(n) << BigInt(32)) +
                        BigInt(
                          this[++t] * 2 ** 24 +
                            65536 * this[++t] +
                            256 * this[++t] +
                            r,
                        )
                      );
                    })),
                    (u.prototype.readFloatLE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 4, this.length),
                        i.read(this, t, !0, 23, 4)
                      );
                    }),
                    (u.prototype.readFloatBE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 4, this.length),
                        i.read(this, t, !1, 23, 4)
                      );
                    }),
                    (u.prototype.readDoubleLE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 8, this.length),
                        i.read(this, t, !0, 52, 8)
                      );
                    }),
                    (u.prototype.readDoubleBE = function (t, e) {
                      return (
                        (t >>>= 0),
                        e || O(t, 8, this.length),
                        i.read(this, t, !1, 52, 8)
                      );
                    }),
                    (u.prototype.writeUintLE = u.prototype.writeUIntLE =
                      function (t, e, r, n) {
                        (t = +t),
                          (e >>>= 0),
                          (r >>>= 0),
                          n || U(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        let i = 1,
                          o = 0;
                        for (this[e] = 255 & t; ++o < r && (i *= 256); )
                          this[e + o] = (t / i) & 255;
                        return e + r;
                      }),
                    (u.prototype.writeUintBE = u.prototype.writeUIntBE =
                      function (t, e, r, n) {
                        (t = +t),
                          (e >>>= 0),
                          (r >>>= 0),
                          n || U(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        let i = r - 1,
                          o = 1;
                        for (this[e + i] = 255 & t; --i >= 0 && (o *= 256); )
                          this[e + i] = (t / o) & 255;
                        return e + r;
                      }),
                    (u.prototype.writeUint8 = u.prototype.writeUInt8 =
                      function (t, e, r) {
                        return (
                          (t = +t),
                          (e >>>= 0),
                          r || U(this, t, e, 1, 255, 0),
                          (this[e] = 255 & t),
                          e + 1
                        );
                      }),
                    (u.prototype.writeUint16LE = u.prototype.writeUInt16LE =
                      function (t, e, r) {
                        return (
                          (t = +t),
                          (e >>>= 0),
                          r || U(this, t, e, 2, 65535, 0),
                          (this[e] = 255 & t),
                          (this[e + 1] = t >>> 8),
                          e + 2
                        );
                      }),
                    (u.prototype.writeUint16BE = u.prototype.writeUInt16BE =
                      function (t, e, r) {
                        return (
                          (t = +t),
                          (e >>>= 0),
                          r || U(this, t, e, 2, 65535, 0),
                          (this[e] = t >>> 8),
                          (this[e + 1] = 255 & t),
                          e + 2
                        );
                      }),
                    (u.prototype.writeUint32LE = u.prototype.writeUInt32LE =
                      function (t, e, r) {
                        return (
                          (t = +t),
                          (e >>>= 0),
                          r || U(this, t, e, 4, 4294967295, 0),
                          (this[e + 3] = t >>> 24),
                          (this[e + 2] = t >>> 16),
                          (this[e + 1] = t >>> 8),
                          (this[e] = 255 & t),
                          e + 4
                        );
                      }),
                    (u.prototype.writeUint32BE = u.prototype.writeUInt32BE =
                      function (t, e, r) {
                        return (
                          (t = +t),
                          (e >>>= 0),
                          r || U(this, t, e, 4, 4294967295, 0),
                          (this[e] = t >>> 24),
                          (this[e + 1] = t >>> 16),
                          (this[e + 2] = t >>> 8),
                          (this[e + 3] = 255 & t),
                          e + 4
                        );
                      }),
                    (u.prototype.writeBigUInt64LE = Q(function (t, e = 0) {
                      return k(
                        this,
                        t,
                        e,
                        BigInt(0),
                        BigInt("0xffffffffffffffff"),
                      );
                    })),
                    (u.prototype.writeBigUInt64BE = Q(function (t, e = 0) {
                      return M(
                        this,
                        t,
                        e,
                        BigInt(0),
                        BigInt("0xffffffffffffffff"),
                      );
                    })),
                    (u.prototype.writeIntLE = function (t, e, r, n) {
                      if (((t = +t), (e >>>= 0), !n)) {
                        const n = Math.pow(2, 8 * r - 1);
                        U(this, t, e, r, n - 1, -n);
                      }
                      let i = 0,
                        o = 1,
                        s = 0;
                      for (this[e] = 255 & t; ++i < r && (o *= 256); )
                        t < 0 && 0 === s && 0 !== this[e + i - 1] && (s = 1),
                          (this[e + i] = (((t / o) | 0) - s) & 255);
                      return e + r;
                    }),
                    (u.prototype.writeIntBE = function (t, e, r, n) {
                      if (((t = +t), (e >>>= 0), !n)) {
                        const n = Math.pow(2, 8 * r - 1);
                        U(this, t, e, r, n - 1, -n);
                      }
                      let i = r - 1,
                        o = 1,
                        s = 0;
                      for (this[e + i] = 255 & t; --i >= 0 && (o *= 256); )
                        t < 0 && 0 === s && 0 !== this[e + i + 1] && (s = 1),
                          (this[e + i] = (((t / o) | 0) - s) & 255);
                      return e + r;
                    }),
                    (u.prototype.writeInt8 = function (t, e, r) {
                      return (
                        (t = +t),
                        (e >>>= 0),
                        r || U(this, t, e, 1, 127, -128),
                        t < 0 && (t = 255 + t + 1),
                        (this[e] = 255 & t),
                        e + 1
                      );
                    }),
                    (u.prototype.writeInt16LE = function (t, e, r) {
                      return (
                        (t = +t),
                        (e >>>= 0),
                        r || U(this, t, e, 2, 32767, -32768),
                        (this[e] = 255 & t),
                        (this[e + 1] = t >>> 8),
                        e + 2
                      );
                    }),
                    (u.prototype.writeInt16BE = function (t, e, r) {
                      return (
                        (t = +t),
                        (e >>>= 0),
                        r || U(this, t, e, 2, 32767, -32768),
                        (this[e] = t >>> 8),
                        (this[e + 1] = 255 & t),
                        e + 2
                      );
                    }),
                    (u.prototype.writeInt32LE = function (t, e, r) {
                      return (
                        (t = +t),
                        (e >>>= 0),
                        r || U(this, t, e, 4, 2147483647, -2147483648),
                        (this[e] = 255 & t),
                        (this[e + 1] = t >>> 8),
                        (this[e + 2] = t >>> 16),
                        (this[e + 3] = t >>> 24),
                        e + 4
                      );
                    }),
                    (u.prototype.writeInt32BE = function (t, e, r) {
                      return (
                        (t = +t),
                        (e >>>= 0),
                        r || U(this, t, e, 4, 2147483647, -2147483648),
                        t < 0 && (t = 4294967295 + t + 1),
                        (this[e] = t >>> 24),
                        (this[e + 1] = t >>> 16),
                        (this[e + 2] = t >>> 8),
                        (this[e + 3] = 255 & t),
                        e + 4
                      );
                    }),
                    (u.prototype.writeBigInt64LE = Q(function (t, e = 0) {
                      return k(
                        this,
                        t,
                        e,
                        -BigInt("0x8000000000000000"),
                        BigInt("0x7fffffffffffffff"),
                      );
                    })),
                    (u.prototype.writeBigInt64BE = Q(function (t, e = 0) {
                      return M(
                        this,
                        t,
                        e,
                        -BigInt("0x8000000000000000"),
                        BigInt("0x7fffffffffffffff"),
                      );
                    })),
                    (u.prototype.writeFloatLE = function (t, e, r) {
                      return j(this, t, e, !0, r);
                    }),
                    (u.prototype.writeFloatBE = function (t, e, r) {
                      return j(this, t, e, !1, r);
                    }),
                    (u.prototype.writeDoubleLE = function (t, e, r) {
                      return P(this, t, e, !0, r);
                    }),
                    (u.prototype.writeDoubleBE = function (t, e, r) {
                      return P(this, t, e, !1, r);
                    }),
                    (u.prototype.copy = function (t, e, r, n) {
                      if (!u.isBuffer(t))
                        throw new TypeError("argument should be a Buffer");
                      if (
                        (r || (r = 0),
                        n || 0 === n || (n = this.length),
                        e >= t.length && (e = t.length),
                        e || (e = 0),
                        n > 0 && n < r && (n = r),
                        n === r)
                      )
                        return 0;
                      if (0 === t.length || 0 === this.length) return 0;
                      if (e < 0)
                        throw new RangeError("targetStart out of bounds");
                      if (r < 0 || r >= this.length)
                        throw new RangeError("Index out of range");
                      if (n < 0)
                        throw new RangeError("sourceEnd out of bounds");
                      n > this.length && (n = this.length),
                        t.length - e < n - r && (n = t.length - e + r);
                      const i = n - r;
                      return (
                        this === t &&
                        "function" == typeof Uint8Array.prototype.copyWithin
                          ? this.copyWithin(e, r, n)
                          : Uint8Array.prototype.set.call(
                              t,
                              this.subarray(r, n),
                              e,
                            ),
                        i
                      );
                    }),
                    (u.prototype.fill = function (t, e, r, n) {
                      if ("string" == typeof t) {
                        if (
                          ("string" == typeof e
                            ? ((n = e), (e = 0), (r = this.length))
                            : "string" == typeof r &&
                              ((n = r), (r = this.length)),
                          void 0 !== n && "string" != typeof n)
                        )
                          throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !u.isEncoding(n))
                          throw new TypeError("Unknown encoding: " + n);
                        if (1 === t.length) {
                          const e = t.charCodeAt(0);
                          (("utf8" === n && e < 128) || "latin1" === n) &&
                            (t = e);
                        }
                      } else
                        "number" == typeof t
                          ? (t &= 255)
                          : "boolean" == typeof t && (t = Number(t));
                      if (e < 0 || this.length < e || this.length < r)
                        throw new RangeError("Out of range index");
                      if (r <= e) return this;
                      let i;
                      if (
                        ((e >>>= 0),
                        (r = void 0 === r ? this.length : r >>> 0),
                        t || (t = 0),
                        "number" == typeof t)
                      )
                        for (i = e; i < r; ++i) this[i] = t;
                      else {
                        const o = u.isBuffer(t) ? t : u.from(t, n),
                          s = o.length;
                        if (0 === s)
                          throw new TypeError(
                            'The value "' +
                              t +
                              '" is invalid for argument "value"',
                          );
                        for (i = 0; i < r - e; ++i) this[i + e] = o[i % s];
                      }
                      return this;
                    });
                  const D = {};
                  function $(t, e, r) {
                    D[t] = class extends r {
                      constructor() {
                        super(),
                          Object.defineProperty(this, "message", {
                            value: e.apply(this, arguments),
                            writable: !0,
                            configurable: !0,
                          }),
                          (this.name = `${this.name} [${t}]`),
                          this.stack,
                          delete this.name;
                      }
                      get code() {
                        return t;
                      }
                      set code(t) {
                        Object.defineProperty(this, "code", {
                          configurable: !0,
                          enumerable: !0,
                          value: t,
                          writable: !0,
                        });
                      }
                      toString() {
                        return `${this.name} [${t}]: ${this.message}`;
                      }
                    };
                  }
                  function V(t) {
                    let e = "",
                      r = t.length;
                    const n = "-" === t[0] ? 1 : 0;
                    for (; r >= n + 4; r -= 3) e = `_${t.slice(r - 3, r)}${e}`;
                    return `${t.slice(0, r)}${e}`;
                  }
                  function F(t, e, r, n, i, o) {
                    if (t > r || t < e) {
                      const n = "bigint" == typeof e ? "n" : "";
                      let i;
                      throw (
                        ((i =
                          o > 3
                            ? 0 === e || e === BigInt(0)
                              ? `>= 0${n} and < 2${n} ** ${8 * (o + 1)}${n}`
                              : `>= -(2${n} ** ${8 * (o + 1) - 1}${n}) and < 2 ** ${8 * (o + 1) - 1}${n}`
                            : `>= ${e}${n} and <= ${r}${n}`),
                        new D.ERR_OUT_OF_RANGE("value", i, t))
                      );
                    }
                    !(function (t, e, r) {
                      q(e, "offset"),
                        (void 0 !== t[e] && void 0 !== t[e + r]) ||
                          W(e, t.length - (r + 1));
                    })(n, i, o);
                  }
                  function q(t, e) {
                    if ("number" != typeof t)
                      throw new D.ERR_INVALID_ARG_TYPE(e, "number", t);
                  }
                  function W(t, e, r) {
                    if (Math.floor(t) !== t)
                      throw (
                        (q(t, r),
                        new D.ERR_OUT_OF_RANGE(r || "offset", "an integer", t))
                      );
                    if (e < 0) throw new D.ERR_BUFFER_OUT_OF_BOUNDS();
                    throw new D.ERR_OUT_OF_RANGE(
                      r || "offset",
                      `>= ${r ? 1 : 0} and <= ${e}`,
                      t,
                    );
                  }
                  $(
                    "ERR_BUFFER_OUT_OF_BOUNDS",
                    function (t) {
                      return t
                        ? `${t} is outside of buffer bounds`
                        : "Attempt to access memory outside buffer bounds";
                    },
                    RangeError,
                  ),
                    $(
                      "ERR_INVALID_ARG_TYPE",
                      function (t, e) {
                        return `The "${t}" argument must be of type number. Received type ${typeof e}`;
                      },
                      TypeError,
                    ),
                    $(
                      "ERR_OUT_OF_RANGE",
                      function (t, e, r) {
                        let n = `The value of "${t}" is out of range.`,
                          i = r;
                        return (
                          Number.isInteger(r) && Math.abs(r) > 2 ** 32
                            ? (i = V(String(r)))
                            : "bigint" == typeof r &&
                              ((i = String(r)),
                              (r > BigInt(2) ** BigInt(32) ||
                                r < -(BigInt(2) ** BigInt(32))) &&
                                (i = V(i)),
                              (i += "n")),
                          (n += ` It must be ${e}. Received ${i}`),
                          n
                        );
                      },
                      RangeError,
                    );
                  const z = /[^+/0-9A-Za-z-_]/g;
                  function H(t, e) {
                    let r;
                    e = e || 1 / 0;
                    const n = t.length;
                    let i = null;
                    const o = [];
                    for (let s = 0; s < n; ++s) {
                      if (((r = t.charCodeAt(s)), r > 55295 && r < 57344)) {
                        if (!i) {
                          if (r > 56319) {
                            (e -= 3) > -1 && o.push(239, 191, 189);
                            continue;
                          }
                          if (s + 1 === n) {
                            (e -= 3) > -1 && o.push(239, 191, 189);
                            continue;
                          }
                          i = r;
                          continue;
                        }
                        if (r < 56320) {
                          (e -= 3) > -1 && o.push(239, 191, 189), (i = r);
                          continue;
                        }
                        r = 65536 + (((i - 55296) << 10) | (r - 56320));
                      } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                      if (((i = null), r < 128)) {
                        if ((e -= 1) < 0) break;
                        o.push(r);
                      } else if (r < 2048) {
                        if ((e -= 2) < 0) break;
                        o.push((r >> 6) | 192, (63 & r) | 128);
                      } else if (r < 65536) {
                        if ((e -= 3) < 0) break;
                        o.push(
                          (r >> 12) | 224,
                          ((r >> 6) & 63) | 128,
                          (63 & r) | 128,
                        );
                      } else {
                        if (!(r < 1114112))
                          throw new Error("Invalid code point");
                        if ((e -= 4) < 0) break;
                        o.push(
                          (r >> 18) | 240,
                          ((r >> 12) & 63) | 128,
                          ((r >> 6) & 63) | 128,
                          (63 & r) | 128,
                        );
                      }
                    }
                    return o;
                  }
                  function X(t) {
                    return n.toByteArray(
                      (function (t) {
                        if (
                          (t = (t = t.split("=")[0]).trim().replace(z, ""))
                            .length < 2
                        )
                          return "";
                        for (; t.length % 4 != 0; ) t += "=";
                        return t;
                      })(t),
                    );
                  }
                  function G(t, e, r, n) {
                    let i;
                    for (
                      i = 0;
                      i < n && !(i + r >= e.length || i >= t.length);
                      ++i
                    )
                      e[i + r] = t[i];
                    return i;
                  }
                  function Y(t, e) {
                    return (
                      t instanceof e ||
                      (null != t &&
                        null != t.constructor &&
                        null != t.constructor.name &&
                        t.constructor.name === e.name)
                    );
                  }
                  function J(t) {
                    return t != t;
                  }
                  const K = (function () {
                    const t = "0123456789abcdef",
                      e = new Array(256);
                    for (let r = 0; r < 16; ++r) {
                      const n = 16 * r;
                      for (let i = 0; i < 16; ++i) e[n + i] = t[r] + t[i];
                    }
                    return e;
                  })();
                  function Q(t) {
                    return "undefined" == typeof BigInt ? Z : t;
                  }
                  function Z() {
                    throw new Error("BigInt not supported");
                  }
                },
                251: (t, e) => {
                  (e.read = function (t, e, r, n, i) {
                    var o,
                      s,
                      a = 8 * i - n - 1,
                      u = (1 << a) - 1,
                      f = u >> 1,
                      h = -7,
                      l = r ? i - 1 : 0,
                      c = r ? -1 : 1,
                      d = t[e + l];
                    for (
                      l += c, o = d & ((1 << -h) - 1), d >>= -h, h += a;
                      h > 0;
                      o = 256 * o + t[e + l], l += c, h -= 8
                    );
                    for (
                      s = o & ((1 << -h) - 1), o >>= -h, h += n;
                      h > 0;
                      s = 256 * s + t[e + l], l += c, h -= 8
                    );
                    if (0 === o) o = 1 - f;
                    else {
                      if (o === u) return s ? NaN : (1 / 0) * (d ? -1 : 1);
                      (s += Math.pow(2, n)), (o -= f);
                    }
                    return (d ? -1 : 1) * s * Math.pow(2, o - n);
                  }),
                    (e.write = function (t, e, r, n, i, o) {
                      var s,
                        a,
                        u,
                        f = 8 * o - i - 1,
                        h = (1 << f) - 1,
                        l = h >> 1,
                        c = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                        d = n ? 0 : o - 1,
                        p = n ? 1 : -1,
                        g = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0;
                      for (
                        e = Math.abs(e),
                          isNaN(e) || e === 1 / 0
                            ? ((a = isNaN(e) ? 1 : 0), (s = h))
                            : ((s = Math.floor(Math.log(e) / Math.LN2)),
                              e * (u = Math.pow(2, -s)) < 1 && (s--, (u *= 2)),
                              (e +=
                                s + l >= 1 ? c / u : c * Math.pow(2, 1 - l)) *
                                u >=
                                2 && (s++, (u /= 2)),
                              s + l >= h
                                ? ((a = 0), (s = h))
                                : s + l >= 1
                                  ? ((a = (e * u - 1) * Math.pow(2, i)),
                                    (s += l))
                                  : ((a =
                                      e * Math.pow(2, l - 1) * Math.pow(2, i)),
                                    (s = 0)));
                        i >= 8;
                        t[r + d] = 255 & a, d += p, a /= 256, i -= 8
                      );
                      for (
                        s = (s << i) | a, f += i;
                        f > 0;
                        t[r + d] = 255 & s, d += p, s /= 256, f -= 8
                      );
                      t[r + d - p] |= 128 * g;
                    });
                },
              },
              e = {};
            function r(n) {
              var i = e[n];
              if (void 0 !== i) return i.exports;
              var o = (e[n] = { exports: {} });
              return t[n](o, o.exports, r), o.exports;
            }
            return (
              (r.d = (t, e) => {
                for (var n in e)
                  r.o(e, n) &&
                    !r.o(t, n) &&
                    Object.defineProperty(t, n, { enumerable: !0, get: e[n] });
              }),
              (r.g = (function () {
                if ("object" == typeof globalThis) return globalThis;
                try {
                  return this || new Function("return this")();
                } catch (t) {
                  if ("object" == typeof window) return window;
                }
              })()),
              (r.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
              (r.r = (t) => {
                "undefined" != typeof Symbol &&
                  Symbol.toStringTag &&
                  Object.defineProperty(t, Symbol.toStringTag, {
                    value: "Module",
                  }),
                  Object.defineProperty(t, "__esModule", { value: !0 });
              }),
              r(281)
            );
          })()),
          (t.exports = e());
      },
      25994: (t, e, r) => {
        t.exports = i;
        var n = r(96827).EventEmitter;
        function i() {
          n.call(this);
        }
        r(70198)(i, n),
          (i.Readable = r(2471)),
          (i.Writable = r(9867)),
          (i.Duplex = r(29793)),
          (i.Transform = r(35799)),
          (i.PassThrough = r(61237)),
          (i.finished = r(23605)),
          (i.pipeline = r(43567)),
          (i.Stream = i),
          (i.prototype.pipe = function (t, e) {
            var r = this;
            function i(e) {
              t.writable && !1 === t.write(e) && r.pause && r.pause();
            }
            function o() {
              r.readable && r.resume && r.resume();
            }
            r.on("data", i),
              t.on("drain", o),
              t._isStdio ||
                (e && !1 === e.end) ||
                (r.on("end", a), r.on("close", u));
            var s = !1;
            function a() {
              s || ((s = !0), t.end());
            }
            function u() {
              s || ((s = !0), "function" == typeof t.destroy && t.destroy());
            }
            function f(t) {
              if ((h(), 0 === n.listenerCount(this, "error"))) throw t;
            }
            function h() {
              r.removeListener("data", i),
                t.removeListener("drain", o),
                r.removeListener("end", a),
                r.removeListener("close", u),
                r.removeListener("error", f),
                t.removeListener("error", f),
                r.removeListener("end", h),
                r.removeListener("close", h),
                t.removeListener("close", h);
            }
            return (
              r.on("error", f),
              t.on("error", f),
              r.on("end", h),
              r.on("close", h),
              t.on("close", h),
              t.emit("pipe", r),
              t
            );
          });
      },
      26531: (t) => {
        "use strict";
        var e = {};
        function r(t, r, n) {
          n || (n = Error);
          var i = (function (t) {
            var e, n;
            function i(e, n, i) {
              return (
                t.call(
                  this,
                  (function (t, e, n) {
                    return "string" == typeof r ? r : r(t, e, n);
                  })(e, n, i),
                ) || this
              );
            }
            return (
              (n = t),
              ((e = i).prototype = Object.create(n.prototype)),
              (e.prototype.constructor = e),
              (e.__proto__ = n),
              i
            );
          })(n);
          (i.prototype.name = n.name), (i.prototype.code = t), (e[t] = i);
        }
        function n(t, e) {
          if (Array.isArray(t)) {
            var r = t.length;
            return (
              (t = t.map(function (t) {
                return String(t);
              })),
              r > 2
                ? "one of "
                    .concat(e, " ")
                    .concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1]
                : 2 === r
                  ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1])
                  : "of ".concat(e, " ").concat(t[0])
            );
          }
          return "of ".concat(e, " ").concat(String(t));
        }
        r(
          "ERR_INVALID_OPT_VALUE",
          function (t, e) {
            return 'The value "' + e + '" is invalid for option "' + t + '"';
          },
          TypeError,
        ),
          r(
            "ERR_INVALID_ARG_TYPE",
            function (t, e, r) {
              var i, o, s, a, u;
              if (
                ("string" == typeof e && ((o = "not "), e.substr(0, 4) === o)
                  ? ((i = "must not be"), (e = e.replace(/^not /, "")))
                  : (i = "must be"),
                (function (t, e, r) {
                  return (
                    (void 0 === r || r > t.length) && (r = t.length),
                    t.substring(r - 9, r) === e
                  );
                })(t, " argument"))
              )
                s = "The ".concat(t, " ").concat(i, " ").concat(n(e, "type"));
              else {
                var f =
                  ("number" != typeof u && (u = 0),
                  u + 1 > (a = t).length || -1 === a.indexOf(".", u)
                    ? "argument"
                    : "property");
                s = 'The "'
                  .concat(t, '" ')
                  .concat(f, " ")
                  .concat(i, " ")
                  .concat(n(e, "type"));
              }
              return s + ". Received type ".concat(typeof r);
            },
            TypeError,
          ),
          r("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"),
          r("ERR_METHOD_NOT_IMPLEMENTED", function (t) {
            return "The " + t + " method is not implemented";
          }),
          r("ERR_STREAM_PREMATURE_CLOSE", "Premature close"),
          r("ERR_STREAM_DESTROYED", function (t) {
            return "Cannot call " + t + " after a stream was destroyed";
          }),
          r("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"),
          r("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"),
          r("ERR_STREAM_WRITE_AFTER_END", "write after end"),
          r(
            "ERR_STREAM_NULL_VALUES",
            "May not write null values to stream",
            TypeError,
          ),
          r(
            "ERR_UNKNOWN_ENCODING",
            function (t) {
              return "Unknown encoding: " + t;
            },
            TypeError,
          ),
          r(
            "ERR_STREAM_UNSHIFT_AFTER_END_EVENT",
            "stream.unshift() after end event",
          ),
          (t.exports.F = e);
      },
      29793: (t, e, r) => {
        "use strict";
        var n = r(88538),
          i =
            Object.keys ||
            function (t) {
              var e = [];
              for (var r in t) e.push(r);
              return e;
            };
        t.exports = h;
        var o = r(2471),
          s = r(9867);
        r(70198)(h, o);
        for (var a = i(s.prototype), u = 0; u < a.length; u++) {
          var f = a[u];
          h.prototype[f] || (h.prototype[f] = s.prototype[f]);
        }
        function h(t) {
          if (!(this instanceof h)) return new h(t);
          o.call(this, t),
            s.call(this, t),
            (this.allowHalfOpen = !0),
            t &&
              (!1 === t.readable && (this.readable = !1),
              !1 === t.writable && (this.writable = !1),
              !1 === t.allowHalfOpen &&
                ((this.allowHalfOpen = !1), this.once("end", l)));
        }
        function l() {
          this._writableState.ended || n.nextTick(c, this);
        }
        function c(t) {
          t.end();
        }
        Object.defineProperty(h.prototype, "writableHighWaterMark", {
          enumerable: !1,
          get: function () {
            return this._writableState.highWaterMark;
          },
        }),
          Object.defineProperty(h.prototype, "writableBuffer", {
            enumerable: !1,
            get: function () {
              return this._writableState && this._writableState.getBuffer();
            },
          }),
          Object.defineProperty(h.prototype, "writableLength", {
            enumerable: !1,
            get: function () {
              return this._writableState.length;
            },
          }),
          Object.defineProperty(h.prototype, "destroyed", {
            enumerable: !1,
            get: function () {
              return (
                void 0 !== this._readableState &&
                void 0 !== this._writableState &&
                this._readableState.destroyed &&
                this._writableState.destroyed
              );
            },
            set: function (t) {
              void 0 !== this._readableState &&
                void 0 !== this._writableState &&
                ((this._readableState.destroyed = t),
                (this._writableState.destroyed = t));
            },
          });
      },
      61237: (t, e, r) => {
        "use strict";
        t.exports = i;
        var n = r(35799);
        function i(t) {
          if (!(this instanceof i)) return new i(t);
          n.call(this, t);
        }
        r(70198)(i, n),
          (i.prototype._transform = function (t, e, r) {
            r(null, t);
          });
      },
      2471: (t, e, r) => {
        "use strict";
        var n,
          i = r(88538);
        (t.exports = B), (B.ReadableState = R), r(96827).EventEmitter;
        var o,
          s = function (t, e) {
            return t.listeners(e).length;
          },
          a = r(47352),
          u = r(38891).Buffer,
          f =
            (void 0 !== r.g
              ? r.g
              : "undefined" != typeof window
                ? window
                : "undefined" != typeof self
                  ? self
                  : {}
            ).Uint8Array || function () {},
          h = r(44643);
        o = h && h.debuglog ? h.debuglog("stream") : function () {};
        var l,
          c,
          d,
          p = r(8402),
          g = r(98415),
          y = r(39776).getHighWaterMark,
          w = r(26531).F,
          b = w.ERR_INVALID_ARG_TYPE,
          m = w.ERR_STREAM_PUSH_AFTER_EOF,
          _ = w.ERR_METHOD_NOT_IMPLEMENTED,
          v = w.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r(70198)(B, a);
        var E = g.errorOrDestroy,
          S = ["error", "close", "destroy", "pause", "resume"];
        function R(t, e, i) {
          (n = n || r(29793)),
            (t = t || {}),
            "boolean" != typeof i && (i = e instanceof n),
            (this.objectMode = !!t.objectMode),
            i && (this.objectMode = this.objectMode || !!t.readableObjectMode),
            (this.highWaterMark = y(this, t, "readableHighWaterMark", i)),
            (this.buffer = new p()),
            (this.length = 0),
            (this.pipes = null),
            (this.pipesCount = 0),
            (this.flowing = null),
            (this.ended = !1),
            (this.endEmitted = !1),
            (this.reading = !1),
            (this.sync = !0),
            (this.needReadable = !1),
            (this.emittedReadable = !1),
            (this.readableListening = !1),
            (this.resumeScheduled = !1),
            (this.paused = !0),
            (this.emitClose = !1 !== t.emitClose),
            (this.autoDestroy = !!t.autoDestroy),
            (this.destroyed = !1),
            (this.defaultEncoding = t.defaultEncoding || "utf8"),
            (this.awaitDrain = 0),
            (this.readingMore = !1),
            (this.decoder = null),
            (this.encoding = null),
            t.encoding &&
              (l || (l = r(360).I),
              (this.decoder = new l(t.encoding)),
              (this.encoding = t.encoding));
        }
        function B(t) {
          if (((n = n || r(29793)), !(this instanceof B))) return new B(t);
          var e = this instanceof n;
          (this._readableState = new R(t, this, e)),
            (this.readable = !0),
            t &&
              ("function" == typeof t.read && (this._read = t.read),
              "function" == typeof t.destroy && (this._destroy = t.destroy)),
            a.call(this);
        }
        function T(t, e, r, n, i) {
          o("readableAddChunk", e);
          var s,
            a = t._readableState;
          if (null === e)
            (a.reading = !1),
              (function (t, e) {
                if ((o("onEofChunk"), !e.ended)) {
                  if (e.decoder) {
                    var r = e.decoder.end();
                    r &&
                      r.length &&
                      (e.buffer.push(r),
                      (e.length += e.objectMode ? 1 : r.length));
                  }
                  (e.ended = !0),
                    e.sync
                      ? L(t)
                      : ((e.needReadable = !1),
                        e.emittedReadable || ((e.emittedReadable = !0), N(t)));
                }
              })(t, a);
          else if (
            (i ||
              (s = (function (t, e) {
                var r, n;
                return (
                  (n = e),
                  u.isBuffer(n) ||
                    n instanceof f ||
                    "string" == typeof e ||
                    void 0 === e ||
                    t.objectMode ||
                    (r = new b("chunk", ["string", "Buffer", "Uint8Array"], e)),
                  r
                );
              })(a, e)),
            s)
          )
            E(t, s);
          else if (a.objectMode || (e && e.length > 0))
            if (
              ("string" == typeof e ||
                a.objectMode ||
                Object.getPrototypeOf(e) === u.prototype ||
                (e = (function (t) {
                  return u.from(t);
                })(e)),
              n)
            )
              a.endEmitted ? E(t, new v()) : A(t, a, e, !0);
            else if (a.ended) E(t, new m());
            else {
              if (a.destroyed) return !1;
              (a.reading = !1),
                a.decoder && !r
                  ? ((e = a.decoder.write(e)),
                    a.objectMode || 0 !== e.length ? A(t, a, e, !1) : O(t, a))
                  : A(t, a, e, !1);
            }
          else n || ((a.reading = !1), O(t, a));
          return !a.ended && (a.length < a.highWaterMark || 0 === a.length);
        }
        function A(t, e, r, n) {
          e.flowing && 0 === e.length && !e.sync
            ? ((e.awaitDrain = 0), t.emit("data", r))
            : ((e.length += e.objectMode ? 1 : r.length),
              n ? e.buffer.unshift(r) : e.buffer.push(r),
              e.needReadable && L(t)),
            O(t, e);
        }
        Object.defineProperty(B.prototype, "destroyed", {
          enumerable: !1,
          get: function () {
            return (
              void 0 !== this._readableState && this._readableState.destroyed
            );
          },
          set: function (t) {
            this._readableState && (this._readableState.destroyed = t);
          },
        }),
          (B.prototype.destroy = g.destroy),
          (B.prototype._undestroy = g.undestroy),
          (B.prototype._destroy = function (t, e) {
            e(t);
          }),
          (B.prototype.push = function (t, e) {
            var r,
              n = this._readableState;
            return (
              n.objectMode
                ? (r = !0)
                : "string" == typeof t &&
                  ((e = e || n.defaultEncoding) !== n.encoding &&
                    ((t = u.from(t, e)), (e = "")),
                  (r = !0)),
              T(this, t, e, !1, r)
            );
          }),
          (B.prototype.unshift = function (t) {
            return T(this, t, null, !0, !1);
          }),
          (B.prototype.isPaused = function () {
            return !1 === this._readableState.flowing;
          }),
          (B.prototype.setEncoding = function (t) {
            l || (l = r(360).I);
            var e = new l(t);
            (this._readableState.decoder = e),
              (this._readableState.encoding =
                this._readableState.decoder.encoding);
            for (var n = this._readableState.buffer.head, i = ""; null !== n; )
              (i += e.write(n.data)), (n = n.next);
            return (
              this._readableState.buffer.clear(),
              "" !== i && this._readableState.buffer.push(i),
              (this._readableState.length = i.length),
              this
            );
          });
        var x = 1073741824;
        function I(t, e) {
          return t <= 0 || (0 === e.length && e.ended)
            ? 0
            : e.objectMode
              ? 1
              : t != t
                ? e.flowing && e.length
                  ? e.buffer.head.data.length
                  : e.length
                : (t > e.highWaterMark &&
                    (e.highWaterMark = (function (t) {
                      return (
                        t >= x
                          ? (t = x)
                          : (t--,
                            (t |= t >>> 1),
                            (t |= t >>> 2),
                            (t |= t >>> 4),
                            (t |= t >>> 8),
                            (t |= t >>> 16),
                            t++),
                        t
                      );
                    })(t)),
                  t <= e.length
                    ? t
                    : e.ended
                      ? e.length
                      : ((e.needReadable = !0), 0));
        }
        function L(t) {
          var e = t._readableState;
          o("emitReadable", e.needReadable, e.emittedReadable),
            (e.needReadable = !1),
            e.emittedReadable ||
              (o("emitReadable", e.flowing),
              (e.emittedReadable = !0),
              i.nextTick(N, t));
        }
        function N(t) {
          var e = t._readableState;
          o("emitReadable_", e.destroyed, e.length, e.ended),
            e.destroyed ||
              (!e.length && !e.ended) ||
              (t.emit("readable"), (e.emittedReadable = !1)),
            (e.needReadable =
              !e.flowing && !e.ended && e.length <= e.highWaterMark),
            j(t);
        }
        function O(t, e) {
          e.readingMore || ((e.readingMore = !0), i.nextTick(U, t, e));
        }
        function U(t, e) {
          for (
            ;
            !e.reading &&
            !e.ended &&
            (e.length < e.highWaterMark || (e.flowing && 0 === e.length));

          ) {
            var r = e.length;
            if ((o("maybeReadMore read 0"), t.read(0), r === e.length)) break;
          }
          e.readingMore = !1;
        }
        function k(t) {
          var e = t._readableState;
          (e.readableListening = t.listenerCount("readable") > 0),
            e.resumeScheduled && !e.paused
              ? (e.flowing = !0)
              : t.listenerCount("data") > 0 && t.resume();
        }
        function M(t) {
          o("readable nexttick read 0"), t.read(0);
        }
        function C(t, e) {
          o("resume", e.reading),
            e.reading || t.read(0),
            (e.resumeScheduled = !1),
            t.emit("resume"),
            j(t),
            e.flowing && !e.reading && t.read(0);
        }
        function j(t) {
          var e = t._readableState;
          for (o("flow", e.flowing); e.flowing && null !== t.read(); );
        }
        function P(t, e) {
          return 0 === e.length
            ? null
            : (e.objectMode
                ? (r = e.buffer.shift())
                : !t || t >= e.length
                  ? ((r = e.decoder
                      ? e.buffer.join("")
                      : 1 === e.buffer.length
                        ? e.buffer.first()
                        : e.buffer.concat(e.length)),
                    e.buffer.clear())
                  : (r = e.buffer.consume(t, e.decoder)),
              r);
          var r;
        }
        function D(t) {
          var e = t._readableState;
          o("endReadable", e.endEmitted),
            e.endEmitted || ((e.ended = !0), i.nextTick($, e, t));
        }
        function $(t, e) {
          if (
            (o("endReadableNT", t.endEmitted, t.length),
            !t.endEmitted &&
              0 === t.length &&
              ((t.endEmitted = !0),
              (e.readable = !1),
              e.emit("end"),
              t.autoDestroy))
          ) {
            var r = e._writableState;
            (!r || (r.autoDestroy && r.finished)) && e.destroy();
          }
        }
        function V(t, e) {
          for (var r = 0, n = t.length; r < n; r++) if (t[r] === e) return r;
          return -1;
        }
        (B.prototype.read = function (t) {
          o("read", t), (t = parseInt(t, 10));
          var e = this._readableState,
            r = t;
          if (
            (0 !== t && (e.emittedReadable = !1),
            0 === t &&
              e.needReadable &&
              ((0 !== e.highWaterMark
                ? e.length >= e.highWaterMark
                : e.length > 0) ||
                e.ended))
          )
            return (
              o("read: emitReadable", e.length, e.ended),
              0 === e.length && e.ended ? D(this) : L(this),
              null
            );
          if (0 === (t = I(t, e)) && e.ended)
            return 0 === e.length && D(this), null;
          var n,
            i = e.needReadable;
          return (
            o("need readable", i),
            (0 === e.length || e.length - t < e.highWaterMark) &&
              o("length less than watermark", (i = !0)),
            e.ended || e.reading
              ? o("reading or ended", (i = !1))
              : i &&
                (o("do read"),
                (e.reading = !0),
                (e.sync = !0),
                0 === e.length && (e.needReadable = !0),
                this._read(e.highWaterMark),
                (e.sync = !1),
                e.reading || (t = I(r, e))),
            null === (n = t > 0 ? P(t, e) : null)
              ? ((e.needReadable = e.length <= e.highWaterMark), (t = 0))
              : ((e.length -= t), (e.awaitDrain = 0)),
            0 === e.length &&
              (e.ended || (e.needReadable = !0), r !== t && e.ended && D(this)),
            null !== n && this.emit("data", n),
            n
          );
        }),
          (B.prototype._read = function (t) {
            E(this, new _("_read()"));
          }),
          (B.prototype.pipe = function (t, e) {
            var r = this,
              n = this._readableState;
            switch (n.pipesCount) {
              case 0:
                n.pipes = t;
                break;
              case 1:
                n.pipes = [n.pipes, t];
                break;
              default:
                n.pipes.push(t);
            }
            (n.pipesCount += 1), o("pipe count=%d opts=%j", n.pipesCount, e);
            var a =
              (e && !1 === e.end) || t === i.stdout || t === i.stderr ? g : u;
            function u() {
              o("onend"), t.end();
            }
            n.endEmitted ? i.nextTick(a) : r.once("end", a),
              t.on("unpipe", function e(i, s) {
                o("onunpipe"),
                  i === r &&
                    s &&
                    !1 === s.hasUnpiped &&
                    ((s.hasUnpiped = !0),
                    o("cleanup"),
                    t.removeListener("close", d),
                    t.removeListener("finish", p),
                    t.removeListener("drain", f),
                    t.removeListener("error", c),
                    t.removeListener("unpipe", e),
                    r.removeListener("end", u),
                    r.removeListener("end", g),
                    r.removeListener("data", l),
                    (h = !0),
                    !n.awaitDrain ||
                      (t._writableState && !t._writableState.needDrain) ||
                      f());
              });
            var f = (function (t) {
              return function () {
                var e = t._readableState;
                o("pipeOnDrain", e.awaitDrain),
                  e.awaitDrain && e.awaitDrain--,
                  0 === e.awaitDrain &&
                    s(t, "data") &&
                    ((e.flowing = !0), j(t));
              };
            })(r);
            t.on("drain", f);
            var h = !1;
            function l(e) {
              o("ondata");
              var i = t.write(e);
              o("dest.write", i),
                !1 === i &&
                  (((1 === n.pipesCount && n.pipes === t) ||
                    (n.pipesCount > 1 && -1 !== V(n.pipes, t))) &&
                    !h &&
                    (o("false write response, pause", n.awaitDrain),
                    n.awaitDrain++),
                  r.pause());
            }
            function c(e) {
              o("onerror", e),
                g(),
                t.removeListener("error", c),
                0 === s(t, "error") && E(t, e);
            }
            function d() {
              t.removeListener("finish", p), g();
            }
            function p() {
              o("onfinish"), t.removeListener("close", d), g();
            }
            function g() {
              o("unpipe"), r.unpipe(t);
            }
            return (
              r.on("data", l),
              (function (t, e, r) {
                if ("function" == typeof t.prependListener)
                  return t.prependListener(e, r);
                t._events && t._events[e]
                  ? Array.isArray(t._events[e])
                    ? t._events[e].unshift(r)
                    : (t._events[e] = [r, t._events[e]])
                  : t.on(e, r);
              })(t, "error", c),
              t.once("close", d),
              t.once("finish", p),
              t.emit("pipe", r),
              n.flowing || (o("pipe resume"), r.resume()),
              t
            );
          }),
          (B.prototype.unpipe = function (t) {
            var e = this._readableState,
              r = { hasUnpiped: !1 };
            if (0 === e.pipesCount) return this;
            if (1 === e.pipesCount)
              return (
                (t && t !== e.pipes) ||
                  (t || (t = e.pipes),
                  (e.pipes = null),
                  (e.pipesCount = 0),
                  (e.flowing = !1),
                  t && t.emit("unpipe", this, r)),
                this
              );
            if (!t) {
              var n = e.pipes,
                i = e.pipesCount;
              (e.pipes = null), (e.pipesCount = 0), (e.flowing = !1);
              for (var o = 0; o < i; o++)
                n[o].emit("unpipe", this, { hasUnpiped: !1 });
              return this;
            }
            var s = V(e.pipes, t);
            return (
              -1 === s ||
                (e.pipes.splice(s, 1),
                (e.pipesCount -= 1),
                1 === e.pipesCount && (e.pipes = e.pipes[0]),
                t.emit("unpipe", this, r)),
              this
            );
          }),
          (B.prototype.on = function (t, e) {
            var r = a.prototype.on.call(this, t, e),
              n = this._readableState;
            return (
              "data" === t
                ? ((n.readableListening = this.listenerCount("readable") > 0),
                  !1 !== n.flowing && this.resume())
                : "readable" === t &&
                  (n.endEmitted ||
                    n.readableListening ||
                    ((n.readableListening = n.needReadable = !0),
                    (n.flowing = !1),
                    (n.emittedReadable = !1),
                    o("on readable", n.length, n.reading),
                    n.length ? L(this) : n.reading || i.nextTick(M, this))),
              r
            );
          }),
          (B.prototype.addListener = B.prototype.on),
          (B.prototype.removeListener = function (t, e) {
            var r = a.prototype.removeListener.call(this, t, e);
            return "readable" === t && i.nextTick(k, this), r;
          }),
          (B.prototype.removeAllListeners = function (t) {
            var e = a.prototype.removeAllListeners.apply(this, arguments);
            return ("readable" !== t && void 0 !== t) || i.nextTick(k, this), e;
          }),
          (B.prototype.resume = function () {
            var t = this._readableState;
            return (
              t.flowing ||
                (o("resume"),
                (t.flowing = !t.readableListening),
                (function (t, e) {
                  e.resumeScheduled ||
                    ((e.resumeScheduled = !0), i.nextTick(C, t, e));
                })(this, t)),
              (t.paused = !1),
              this
            );
          }),
          (B.prototype.pause = function () {
            return (
              o("call pause flowing=%j", this._readableState.flowing),
              !1 !== this._readableState.flowing &&
                (o("pause"),
                (this._readableState.flowing = !1),
                this.emit("pause")),
              (this._readableState.paused = !0),
              this
            );
          }),
          (B.prototype.wrap = function (t) {
            var e = this,
              r = this._readableState,
              n = !1;
            for (var i in (t.on("end", function () {
              if ((o("wrapped end"), r.decoder && !r.ended)) {
                var t = r.decoder.end();
                t && t.length && e.push(t);
              }
              e.push(null);
            }),
            t.on("data", function (i) {
              o("wrapped data"),
                r.decoder && (i = r.decoder.write(i)),
                (r.objectMode && null == i) ||
                  ((r.objectMode || (i && i.length)) &&
                    (e.push(i) || ((n = !0), t.pause())));
            }),
            t))
              void 0 === this[i] &&
                "function" == typeof t[i] &&
                (this[i] = (function (e) {
                  return function () {
                    return t[e].apply(t, arguments);
                  };
                })(i));
            for (var s = 0; s < S.length; s++)
              t.on(S[s], this.emit.bind(this, S[s]));
            return (
              (this._read = function (e) {
                o("wrapped _read", e), n && ((n = !1), t.resume());
              }),
              this
            );
          }),
          "function" == typeof Symbol &&
            (B.prototype[Symbol.asyncIterator] = function () {
              return void 0 === c && (c = r(95094)), c(this);
            }),
          Object.defineProperty(B.prototype, "readableHighWaterMark", {
            enumerable: !1,
            get: function () {
              return this._readableState.highWaterMark;
            },
          }),
          Object.defineProperty(B.prototype, "readableBuffer", {
            enumerable: !1,
            get: function () {
              return this._readableState && this._readableState.buffer;
            },
          }),
          Object.defineProperty(B.prototype, "readableFlowing", {
            enumerable: !1,
            get: function () {
              return this._readableState.flowing;
            },
            set: function (t) {
              this._readableState && (this._readableState.flowing = t);
            },
          }),
          (B._fromList = P),
          Object.defineProperty(B.prototype, "readableLength", {
            enumerable: !1,
            get: function () {
              return this._readableState.length;
            },
          }),
          "function" == typeof Symbol &&
            (B.from = function (t, e) {
              return void 0 === d && (d = r(73212)), d(B, t, e);
            });
      },
      35799: (t, e, r) => {
        "use strict";
        t.exports = h;
        var n = r(26531).F,
          i = n.ERR_METHOD_NOT_IMPLEMENTED,
          o = n.ERR_MULTIPLE_CALLBACK,
          s = n.ERR_TRANSFORM_ALREADY_TRANSFORMING,
          a = n.ERR_TRANSFORM_WITH_LENGTH_0,
          u = r(29793);
        function f(t, e) {
          var r = this._transformState;
          r.transforming = !1;
          var n = r.writecb;
          if (null === n) return this.emit("error", new o());
          (r.writechunk = null),
            (r.writecb = null),
            null != e && this.push(e),
            n(t);
          var i = this._readableState;
          (i.reading = !1),
            (i.needReadable || i.length < i.highWaterMark) &&
              this._read(i.highWaterMark);
        }
        function h(t) {
          if (!(this instanceof h)) return new h(t);
          u.call(this, t),
            (this._transformState = {
              afterTransform: f.bind(this),
              needTransform: !1,
              transforming: !1,
              writecb: null,
              writechunk: null,
              writeencoding: null,
            }),
            (this._readableState.needReadable = !0),
            (this._readableState.sync = !1),
            t &&
              ("function" == typeof t.transform &&
                (this._transform = t.transform),
              "function" == typeof t.flush && (this._flush = t.flush)),
            this.on("prefinish", l);
        }
        function l() {
          var t = this;
          "function" != typeof this._flush || this._readableState.destroyed
            ? c(this, null, null)
            : this._flush(function (e, r) {
                c(t, e, r);
              });
        }
        function c(t, e, r) {
          if (e) return t.emit("error", e);
          if ((null != r && t.push(r), t._writableState.length)) throw new a();
          if (t._transformState.transforming) throw new s();
          return t.push(null);
        }
        r(70198)(h, u),
          (h.prototype.push = function (t, e) {
            return (
              (this._transformState.needTransform = !1),
              u.prototype.push.call(this, t, e)
            );
          }),
          (h.prototype._transform = function (t, e, r) {
            r(new i("_transform()"));
          }),
          (h.prototype._write = function (t, e, r) {
            var n = this._transformState;
            if (
              ((n.writecb = r),
              (n.writechunk = t),
              (n.writeencoding = e),
              !n.transforming)
            ) {
              var i = this._readableState;
              (n.needTransform ||
                i.needReadable ||
                i.length < i.highWaterMark) &&
                this._read(i.highWaterMark);
            }
          }),
          (h.prototype._read = function (t) {
            var e = this._transformState;
            null === e.writechunk || e.transforming
              ? (e.needTransform = !0)
              : ((e.transforming = !0),
                this._transform(
                  e.writechunk,
                  e.writeencoding,
                  e.afterTransform,
                ));
          }),
          (h.prototype._destroy = function (t, e) {
            u.prototype._destroy.call(this, t, function (t) {
              e(t);
            });
          });
      },
      9867: (t, e, r) => {
        "use strict";
        var n,
          i = r(88538);
        function o(t) {
          var e = this;
          (this.next = null),
            (this.entry = null),
            (this.finish = function () {
              !(function (t, e) {
                var r = t.entry;
                for (t.entry = null; r; ) {
                  var n = r.callback;
                  e.pendingcb--, n(undefined), (r = r.next);
                }
                e.corkedRequestsFree.next = t;
              })(e, t);
            });
        }
        (t.exports = B), (B.WritableState = R);
        var s,
          a = { deprecate: r(71527) },
          u = r(47352),
          f = r(38891).Buffer,
          h =
            (void 0 !== r.g
              ? r.g
              : "undefined" != typeof window
                ? window
                : "undefined" != typeof self
                  ? self
                  : {}
            ).Uint8Array || function () {},
          l = r(98415),
          c = r(39776).getHighWaterMark,
          d = r(26531).F,
          p = d.ERR_INVALID_ARG_TYPE,
          g = d.ERR_METHOD_NOT_IMPLEMENTED,
          y = d.ERR_MULTIPLE_CALLBACK,
          w = d.ERR_STREAM_CANNOT_PIPE,
          b = d.ERR_STREAM_DESTROYED,
          m = d.ERR_STREAM_NULL_VALUES,
          _ = d.ERR_STREAM_WRITE_AFTER_END,
          v = d.ERR_UNKNOWN_ENCODING,
          E = l.errorOrDestroy;
        function S() {}
        function R(t, e, s) {
          (n = n || r(29793)),
            (t = t || {}),
            "boolean" != typeof s && (s = e instanceof n),
            (this.objectMode = !!t.objectMode),
            s && (this.objectMode = this.objectMode || !!t.writableObjectMode),
            (this.highWaterMark = c(this, t, "writableHighWaterMark", s)),
            (this.finalCalled = !1),
            (this.needDrain = !1),
            (this.ending = !1),
            (this.ended = !1),
            (this.finished = !1),
            (this.destroyed = !1);
          var a = !1 === t.decodeStrings;
          (this.decodeStrings = !a),
            (this.defaultEncoding = t.defaultEncoding || "utf8"),
            (this.length = 0),
            (this.writing = !1),
            (this.corked = 0),
            (this.sync = !0),
            (this.bufferProcessing = !1),
            (this.onwrite = function (t) {
              !(function (t, e) {
                var r = t._writableState,
                  n = r.sync,
                  o = r.writecb;
                if ("function" != typeof o) throw new y();
                if (
                  ((function (t) {
                    (t.writing = !1),
                      (t.writecb = null),
                      (t.length -= t.writelen),
                      (t.writelen = 0);
                  })(r),
                  e)
                )
                  !(function (t, e, r, n, o) {
                    --e.pendingcb,
                      r
                        ? (i.nextTick(o, n),
                          i.nextTick(N, t, e),
                          (t._writableState.errorEmitted = !0),
                          E(t, n))
                        : (o(n),
                          (t._writableState.errorEmitted = !0),
                          E(t, n),
                          N(t, e));
                  })(t, r, n, e, o);
                else {
                  var s = I(r) || t.destroyed;
                  s ||
                    r.corked ||
                    r.bufferProcessing ||
                    !r.bufferedRequest ||
                    x(t, r),
                    n ? i.nextTick(A, t, r, s, o) : A(t, r, s, o);
                }
              })(e, t);
            }),
            (this.writecb = null),
            (this.writelen = 0),
            (this.bufferedRequest = null),
            (this.lastBufferedRequest = null),
            (this.pendingcb = 0),
            (this.prefinished = !1),
            (this.errorEmitted = !1),
            (this.emitClose = !1 !== t.emitClose),
            (this.autoDestroy = !!t.autoDestroy),
            (this.bufferedRequestCount = 0),
            (this.corkedRequestsFree = new o(this));
        }
        function B(t) {
          var e = this instanceof (n = n || r(29793));
          if (!e && !s.call(B, this)) return new B(t);
          (this._writableState = new R(t, this, e)),
            (this.writable = !0),
            t &&
              ("function" == typeof t.write && (this._write = t.write),
              "function" == typeof t.writev && (this._writev = t.writev),
              "function" == typeof t.destroy && (this._destroy = t.destroy),
              "function" == typeof t.final && (this._final = t.final)),
            u.call(this);
        }
        function T(t, e, r, n, i, o, s) {
          (e.writelen = n),
            (e.writecb = s),
            (e.writing = !0),
            (e.sync = !0),
            e.destroyed
              ? e.onwrite(new b("write"))
              : r
                ? t._writev(i, e.onwrite)
                : t._write(i, o, e.onwrite),
            (e.sync = !1);
        }
        function A(t, e, r, n) {
          r ||
            (function (t, e) {
              0 === e.length &&
                e.needDrain &&
                ((e.needDrain = !1), t.emit("drain"));
            })(t, e),
            e.pendingcb--,
            n(),
            N(t, e);
        }
        function x(t, e) {
          e.bufferProcessing = !0;
          var r = e.bufferedRequest;
          if (t._writev && r && r.next) {
            var n = e.bufferedRequestCount,
              i = new Array(n),
              s = e.corkedRequestsFree;
            s.entry = r;
            for (var a = 0, u = !0; r; )
              (i[a] = r), r.isBuf || (u = !1), (r = r.next), (a += 1);
            (i.allBuffers = u),
              T(t, e, !0, e.length, i, "", s.finish),
              e.pendingcb++,
              (e.lastBufferedRequest = null),
              s.next
                ? ((e.corkedRequestsFree = s.next), (s.next = null))
                : (e.corkedRequestsFree = new o(e)),
              (e.bufferedRequestCount = 0);
          } else {
            for (; r; ) {
              var f = r.chunk,
                h = r.encoding,
                l = r.callback;
              if (
                (T(t, e, !1, e.objectMode ? 1 : f.length, f, h, l),
                (r = r.next),
                e.bufferedRequestCount--,
                e.writing)
              )
                break;
            }
            null === r && (e.lastBufferedRequest = null);
          }
          (e.bufferedRequest = r), (e.bufferProcessing = !1);
        }
        function I(t) {
          return (
            t.ending &&
            0 === t.length &&
            null === t.bufferedRequest &&
            !t.finished &&
            !t.writing
          );
        }
        function L(t, e) {
          t._final(function (r) {
            e.pendingcb--,
              r && E(t, r),
              (e.prefinished = !0),
              t.emit("prefinish"),
              N(t, e);
          });
        }
        function N(t, e) {
          var r = I(e);
          if (
            r &&
            ((function (t, e) {
              e.prefinished ||
                e.finalCalled ||
                ("function" != typeof t._final || e.destroyed
                  ? ((e.prefinished = !0), t.emit("prefinish"))
                  : (e.pendingcb++, (e.finalCalled = !0), i.nextTick(L, t, e)));
            })(t, e),
            0 === e.pendingcb &&
              ((e.finished = !0), t.emit("finish"), e.autoDestroy))
          ) {
            var n = t._readableState;
            (!n || (n.autoDestroy && n.endEmitted)) && t.destroy();
          }
          return r;
        }
        r(70198)(B, u),
          (R.prototype.getBuffer = function () {
            for (var t = this.bufferedRequest, e = []; t; )
              e.push(t), (t = t.next);
            return e;
          }),
          (function () {
            try {
              Object.defineProperty(R.prototype, "buffer", {
                get: a.deprecate(
                  function () {
                    return this.getBuffer();
                  },
                  "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                  "DEP0003",
                ),
              });
            } catch (t) {}
          })(),
          "function" == typeof Symbol &&
          Symbol.hasInstance &&
          "function" == typeof Function.prototype[Symbol.hasInstance]
            ? ((s = Function.prototype[Symbol.hasInstance]),
              Object.defineProperty(B, Symbol.hasInstance, {
                value: function (t) {
                  return (
                    !!s.call(this, t) ||
                    (this === B && t && t._writableState instanceof R)
                  );
                },
              }))
            : (s = function (t) {
                return t instanceof this;
              }),
          (B.prototype.pipe = function () {
            E(this, new w());
          }),
          (B.prototype.write = function (t, e, r) {
            var n,
              o = this._writableState,
              s = !1,
              a = !o.objectMode && ((n = t), f.isBuffer(n) || n instanceof h);
            return (
              a &&
                !f.isBuffer(t) &&
                (t = (function (t) {
                  return f.from(t);
                })(t)),
              "function" == typeof e && ((r = e), (e = null)),
              a ? (e = "buffer") : e || (e = o.defaultEncoding),
              "function" != typeof r && (r = S),
              o.ending
                ? (function (t, e) {
                    var r = new _();
                    E(t, r), i.nextTick(e, r);
                  })(this, r)
                : (a ||
                    (function (t, e, r, n) {
                      var o;
                      return (
                        null === r
                          ? (o = new m())
                          : "string" == typeof r ||
                            e.objectMode ||
                            (o = new p("chunk", ["string", "Buffer"], r)),
                        !o || (E(t, o), i.nextTick(n, o), !1)
                      );
                    })(this, o, t, r)) &&
                  (o.pendingcb++,
                  (s = (function (t, e, r, n, i, o) {
                    if (!r) {
                      var s = (function (t, e, r) {
                        return (
                          t.objectMode ||
                            !1 === t.decodeStrings ||
                            "string" != typeof e ||
                            (e = f.from(e, r)),
                          e
                        );
                      })(e, n, i);
                      n !== s && ((r = !0), (i = "buffer"), (n = s));
                    }
                    var a = e.objectMode ? 1 : n.length;
                    e.length += a;
                    var u = e.length < e.highWaterMark;
                    if ((u || (e.needDrain = !0), e.writing || e.corked)) {
                      var h = e.lastBufferedRequest;
                      (e.lastBufferedRequest = {
                        chunk: n,
                        encoding: i,
                        isBuf: r,
                        callback: o,
                        next: null,
                      }),
                        h
                          ? (h.next = e.lastBufferedRequest)
                          : (e.bufferedRequest = e.lastBufferedRequest),
                        (e.bufferedRequestCount += 1);
                    } else T(t, e, !1, a, n, i, o);
                    return u;
                  })(this, o, a, t, e, r))),
              s
            );
          }),
          (B.prototype.cork = function () {
            this._writableState.corked++;
          }),
          (B.prototype.uncork = function () {
            var t = this._writableState;
            t.corked &&
              (t.corked--,
              t.writing ||
                t.corked ||
                t.bufferProcessing ||
                !t.bufferedRequest ||
                x(this, t));
          }),
          (B.prototype.setDefaultEncoding = function (t) {
            if (
              ("string" == typeof t && (t = t.toLowerCase()),
              !(
                [
                  "hex",
                  "utf8",
                  "utf-8",
                  "ascii",
                  "binary",
                  "base64",
                  "ucs2",
                  "ucs-2",
                  "utf16le",
                  "utf-16le",
                  "raw",
                ].indexOf((t + "").toLowerCase()) > -1
              ))
            )
              throw new v(t);
            return (this._writableState.defaultEncoding = t), this;
          }),
          Object.defineProperty(B.prototype, "writableBuffer", {
            enumerable: !1,
            get: function () {
              return this._writableState && this._writableState.getBuffer();
            },
          }),
          Object.defineProperty(B.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function () {
              return this._writableState.highWaterMark;
            },
          }),
          (B.prototype._write = function (t, e, r) {
            r(new g("_write()"));
          }),
          (B.prototype._writev = null),
          (B.prototype.end = function (t, e, r) {
            var n = this._writableState;
            return (
              "function" == typeof t
                ? ((r = t), (t = null), (e = null))
                : "function" == typeof e && ((r = e), (e = null)),
              null != t && this.write(t, e),
              n.corked && ((n.corked = 1), this.uncork()),
              n.ending ||
                (function (t, e, r) {
                  (e.ending = !0),
                    N(t, e),
                    r && (e.finished ? i.nextTick(r) : t.once("finish", r)),
                    (e.ended = !0),
                    (t.writable = !1);
                })(this, n, r),
              this
            );
          }),
          Object.defineProperty(B.prototype, "writableLength", {
            enumerable: !1,
            get: function () {
              return this._writableState.length;
            },
          }),
          Object.defineProperty(B.prototype, "destroyed", {
            enumerable: !1,
            get: function () {
              return (
                void 0 !== this._writableState && this._writableState.destroyed
              );
            },
            set: function (t) {
              this._writableState && (this._writableState.destroyed = t);
            },
          }),
          (B.prototype.destroy = l.destroy),
          (B.prototype._undestroy = l.undestroy),
          (B.prototype._destroy = function (t, e) {
            e(t);
          });
      },
      95094: (t, e, r) => {
        "use strict";
        var n,
          i = r(88538);
        function o(t, e, r) {
          return (
            (e = (function (t) {
              var e = (function (t) {
                if ("object" != typeof t || null === t) return t;
                var e = t[Symbol.toPrimitive];
                if (void 0 !== e) {
                  var r = e.call(t, "string");
                  if ("object" != typeof r) return r;
                  throw new TypeError(
                    "@@toPrimitive must return a primitive value.",
                  );
                }
                return String(t);
              })(t);
              return "symbol" == typeof e ? e : String(e);
            })(e)) in t
              ? Object.defineProperty(t, e, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (t[e] = r),
            t
          );
        }
        var s = r(23605),
          a = Symbol("lastResolve"),
          u = Symbol("lastReject"),
          f = Symbol("error"),
          h = Symbol("ended"),
          l = Symbol("lastPromise"),
          c = Symbol("handlePromise"),
          d = Symbol("stream");
        function p(t, e) {
          return { value: t, done: e };
        }
        function g(t) {
          var e = t[a];
          if (null !== e) {
            var r = t[d].read();
            null !== r &&
              ((t[l] = null), (t[a] = null), (t[u] = null), e(p(r, !1)));
          }
        }
        function y(t) {
          i.nextTick(g, t);
        }
        var w = Object.getPrototypeOf(function () {}),
          b = Object.setPrototypeOf(
            (o(
              (n = {
                get stream() {
                  return this[d];
                },
                next: function () {
                  var t = this,
                    e = this[f];
                  if (null !== e) return Promise.reject(e);
                  if (this[h]) return Promise.resolve(p(void 0, !0));
                  if (this[d].destroyed)
                    return new Promise(function (e, r) {
                      i.nextTick(function () {
                        t[f] ? r(t[f]) : e(p(void 0, !0));
                      });
                    });
                  var r,
                    n = this[l];
                  if (n)
                    r = new Promise(
                      (function (t, e) {
                        return function (r, n) {
                          t.then(function () {
                            e[h] ? r(p(void 0, !0)) : e[c](r, n);
                          }, n);
                        };
                      })(n, this),
                    );
                  else {
                    var o = this[d].read();
                    if (null !== o) return Promise.resolve(p(o, !1));
                    r = new Promise(this[c]);
                  }
                  return (this[l] = r), r;
                },
              }),
              Symbol.asyncIterator,
              function () {
                return this;
              },
            ),
            o(n, "return", function () {
              var t = this;
              return new Promise(function (e, r) {
                t[d].destroy(null, function (t) {
                  t ? r(t) : e(p(void 0, !0));
                });
              });
            }),
            n),
            w,
          );
        t.exports = function (t) {
          var e,
            r = Object.create(
              b,
              (o((e = {}), d, { value: t, writable: !0 }),
              o(e, a, { value: null, writable: !0 }),
              o(e, u, { value: null, writable: !0 }),
              o(e, f, { value: null, writable: !0 }),
              o(e, h, { value: t._readableState.endEmitted, writable: !0 }),
              o(e, c, {
                value: function (t, e) {
                  var n = r[d].read();
                  n
                    ? ((r[l] = null), (r[a] = null), (r[u] = null), t(p(n, !1)))
                    : ((r[a] = t), (r[u] = e));
                },
                writable: !0,
              }),
              e),
            );
          return (
            (r[l] = null),
            s(t, function (t) {
              if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
                var e = r[u];
                return (
                  null !== e &&
                    ((r[l] = null), (r[a] = null), (r[u] = null), e(t)),
                  void (r[f] = t)
                );
              }
              var n = r[a];
              null !== n &&
                ((r[l] = null), (r[a] = null), (r[u] = null), n(p(void 0, !0))),
                (r[h] = !0);
            }),
            t.on("readable", y.bind(null, r)),
            r
          );
        };
      },
      8402: (t, e, r) => {
        "use strict";
        function n(t, e) {
          var r = Object.keys(t);
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(t);
            e &&
              (n = n.filter(function (e) {
                return Object.getOwnPropertyDescriptor(t, e).enumerable;
              })),
              r.push.apply(r, n);
          }
          return r;
        }
        function i(t) {
          for (var e = 1; e < arguments.length; e++) {
            var r = null != arguments[e] ? arguments[e] : {};
            e % 2
              ? n(Object(r), !0).forEach(function (e) {
                  o(t, e, r[e]);
                })
              : Object.getOwnPropertyDescriptors
                ? Object.defineProperties(
                    t,
                    Object.getOwnPropertyDescriptors(r),
                  )
                : n(Object(r)).forEach(function (e) {
                    Object.defineProperty(
                      t,
                      e,
                      Object.getOwnPropertyDescriptor(r, e),
                    );
                  });
          }
          return t;
        }
        function o(t, e, r) {
          return (
            (e = a(e)) in t
              ? Object.defineProperty(t, e, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (t[e] = r),
            t
          );
        }
        function s(t, e) {
          for (var r = 0; r < e.length; r++) {
            var n = e[r];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              "value" in n && (n.writable = !0),
              Object.defineProperty(t, a(n.key), n);
          }
        }
        function a(t) {
          var e = (function (t) {
            if ("object" != typeof t || null === t) return t;
            var e = t[Symbol.toPrimitive];
            if (void 0 !== e) {
              var r = e.call(t, "string");
              if ("object" != typeof r) return r;
              throw new TypeError(
                "@@toPrimitive must return a primitive value.",
              );
            }
            return String(t);
          })(t);
          return "symbol" == typeof e ? e : String(e);
        }
        var u = r(38891).Buffer,
          f = r(495).inspect,
          h = (f && f.custom) || "inspect";
        t.exports = (function () {
          function t() {
            !(function (t, e) {
              if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function");
            })(this, t),
              (this.head = null),
              (this.tail = null),
              (this.length = 0);
          }
          var e, r;
          return (
            (e = t),
            (r = [
              {
                key: "push",
                value: function (t) {
                  var e = { data: t, next: null };
                  this.length > 0 ? (this.tail.next = e) : (this.head = e),
                    (this.tail = e),
                    ++this.length;
                },
              },
              {
                key: "unshift",
                value: function (t) {
                  var e = { data: t, next: this.head };
                  0 === this.length && (this.tail = e),
                    (this.head = e),
                    ++this.length;
                },
              },
              {
                key: "shift",
                value: function () {
                  if (0 !== this.length) {
                    var t = this.head.data;
                    return (
                      1 === this.length
                        ? (this.head = this.tail = null)
                        : (this.head = this.head.next),
                      --this.length,
                      t
                    );
                  }
                },
              },
              {
                key: "clear",
                value: function () {
                  (this.head = this.tail = null), (this.length = 0);
                },
              },
              {
                key: "join",
                value: function (t) {
                  if (0 === this.length) return "";
                  for (var e = this.head, r = "" + e.data; (e = e.next); )
                    r += t + e.data;
                  return r;
                },
              },
              {
                key: "concat",
                value: function (t) {
                  if (0 === this.length) return u.alloc(0);
                  for (
                    var e,
                      r,
                      n,
                      i = u.allocUnsafe(t >>> 0),
                      o = this.head,
                      s = 0;
                    o;

                  )
                    (e = o.data),
                      (r = i),
                      (n = s),
                      u.prototype.copy.call(e, r, n),
                      (s += o.data.length),
                      (o = o.next);
                  return i;
                },
              },
              {
                key: "consume",
                value: function (t, e) {
                  var r;
                  return (
                    t < this.head.data.length
                      ? ((r = this.head.data.slice(0, t)),
                        (this.head.data = this.head.data.slice(t)))
                      : (r =
                          t === this.head.data.length
                            ? this.shift()
                            : e
                              ? this._getString(t)
                              : this._getBuffer(t)),
                    r
                  );
                },
              },
              {
                key: "first",
                value: function () {
                  return this.head.data;
                },
              },
              {
                key: "_getString",
                value: function (t) {
                  var e = this.head,
                    r = 1,
                    n = e.data;
                  for (t -= n.length; (e = e.next); ) {
                    var i = e.data,
                      o = t > i.length ? i.length : t;
                    if (
                      (o === i.length ? (n += i) : (n += i.slice(0, t)),
                      0 == (t -= o))
                    ) {
                      o === i.length
                        ? (++r,
                          e.next
                            ? (this.head = e.next)
                            : (this.head = this.tail = null))
                        : ((this.head = e), (e.data = i.slice(o)));
                      break;
                    }
                    ++r;
                  }
                  return (this.length -= r), n;
                },
              },
              {
                key: "_getBuffer",
                value: function (t) {
                  var e = u.allocUnsafe(t),
                    r = this.head,
                    n = 1;
                  for (r.data.copy(e), t -= r.data.length; (r = r.next); ) {
                    var i = r.data,
                      o = t > i.length ? i.length : t;
                    if ((i.copy(e, e.length - t, 0, o), 0 == (t -= o))) {
                      o === i.length
                        ? (++n,
                          r.next
                            ? (this.head = r.next)
                            : (this.head = this.tail = null))
                        : ((this.head = r), (r.data = i.slice(o)));
                      break;
                    }
                    ++n;
                  }
                  return (this.length -= n), e;
                },
              },
              {
                key: h,
                value: function (t, e) {
                  return f(
                    this,
                    i(i({}, e), {}, { depth: 0, customInspect: !1 }),
                  );
                },
              },
            ]) && s(e.prototype, r),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            t
          );
        })();
      },
      98415: (t, e, r) => {
        "use strict";
        var n = r(88538);
        function i(t, e) {
          s(t, e), o(t);
        }
        function o(t) {
          (t._writableState && !t._writableState.emitClose) ||
            (t._readableState && !t._readableState.emitClose) ||
            t.emit("close");
        }
        function s(t, e) {
          t.emit("error", e);
        }
        t.exports = {
          destroy: function (t, e) {
            var r = this,
              a = this._readableState && this._readableState.destroyed,
              u = this._writableState && this._writableState.destroyed;
            return a || u
              ? (e
                  ? e(t)
                  : t &&
                    (this._writableState
                      ? this._writableState.errorEmitted ||
                        ((this._writableState.errorEmitted = !0),
                        n.nextTick(s, this, t))
                      : n.nextTick(s, this, t)),
                this)
              : (this._readableState && (this._readableState.destroyed = !0),
                this._writableState && (this._writableState.destroyed = !0),
                this._destroy(t || null, function (t) {
                  !e && t
                    ? r._writableState
                      ? r._writableState.errorEmitted
                        ? n.nextTick(o, r)
                        : ((r._writableState.errorEmitted = !0),
                          n.nextTick(i, r, t))
                      : n.nextTick(i, r, t)
                    : e
                      ? (n.nextTick(o, r), e(t))
                      : n.nextTick(o, r);
                }),
                this);
          },
          undestroy: function () {
            this._readableState &&
              ((this._readableState.destroyed = !1),
              (this._readableState.reading = !1),
              (this._readableState.ended = !1),
              (this._readableState.endEmitted = !1)),
              this._writableState &&
                ((this._writableState.destroyed = !1),
                (this._writableState.ended = !1),
                (this._writableState.ending = !1),
                (this._writableState.finalCalled = !1),
                (this._writableState.prefinished = !1),
                (this._writableState.finished = !1),
                (this._writableState.errorEmitted = !1));
          },
          errorOrDestroy: function (t, e) {
            var r = t._readableState,
              n = t._writableState;
            (r && r.autoDestroy) || (n && n.autoDestroy)
              ? t.destroy(e)
              : t.emit("error", e);
          },
        };
      },
      23605: (t, e, r) => {
        "use strict";
        var n = r(26531).F.ERR_STREAM_PREMATURE_CLOSE;
        function i() {}
        t.exports = function t(e, r, o) {
          if ("function" == typeof r) return t(e, null, r);
          r || (r = {}),
            (o = (function (t) {
              var e = !1;
              return function () {
                if (!e) {
                  e = !0;
                  for (
                    var r = arguments.length, n = new Array(r), i = 0;
                    i < r;
                    i++
                  )
                    n[i] = arguments[i];
                  t.apply(this, n);
                }
              };
            })(o || i));
          var s = r.readable || (!1 !== r.readable && e.readable),
            a = r.writable || (!1 !== r.writable && e.writable),
            u = function () {
              e.writable || h();
            },
            f = e._writableState && e._writableState.finished,
            h = function () {
              (a = !1), (f = !0), s || o.call(e);
            },
            l = e._readableState && e._readableState.endEmitted,
            c = function () {
              (s = !1), (l = !0), a || o.call(e);
            },
            d = function (t) {
              o.call(e, t);
            },
            p = function () {
              var t;
              return s && !l
                ? ((e._readableState && e._readableState.ended) ||
                    (t = new n()),
                  o.call(e, t))
                : a && !f
                  ? ((e._writableState && e._writableState.ended) ||
                      (t = new n()),
                    o.call(e, t))
                  : void 0;
            },
            g = function () {
              e.req.on("finish", h);
            };
          return (
            (function (t) {
              return t.setHeader && "function" == typeof t.abort;
            })(e)
              ? (e.on("complete", h),
                e.on("abort", p),
                e.req ? g() : e.on("request", g))
              : a && !e._writableState && (e.on("end", u), e.on("close", u)),
            e.on("end", c),
            e.on("finish", h),
            !1 !== r.error && e.on("error", d),
            e.on("close", p),
            function () {
              e.removeListener("complete", h),
                e.removeListener("abort", p),
                e.removeListener("request", g),
                e.req && e.req.removeListener("finish", h),
                e.removeListener("end", u),
                e.removeListener("close", u),
                e.removeListener("finish", h),
                e.removeListener("end", c),
                e.removeListener("error", d),
                e.removeListener("close", p);
            }
          );
        };
      },
      73212: (t) => {
        t.exports = function () {
          throw new Error("Readable.from is not available in the browser");
        };
      },
      43567: (t, e, r) => {
        "use strict";
        var n,
          i = r(26531).F,
          o = i.ERR_MISSING_ARGS,
          s = i.ERR_STREAM_DESTROYED;
        function a(t) {
          if (t) throw t;
        }
        function u(t) {
          t();
        }
        function f(t, e) {
          return t.pipe(e);
        }
        t.exports = function () {
          for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++)
            e[i] = arguments[i];
          var h,
            l = (function (t) {
              return t.length
                ? "function" != typeof t[t.length - 1]
                  ? a
                  : t.pop()
                : a;
            })(e);
          if ((Array.isArray(e[0]) && (e = e[0]), e.length < 2))
            throw new o("streams");
          var c = e.map(function (t, i) {
            var o = i < e.length - 1;
            return (function (t, e, i, o) {
              o = (function (t) {
                var e = !1;
                return function () {
                  e || ((e = !0), t.apply(void 0, arguments));
                };
              })(o);
              var a = !1;
              t.on("close", function () {
                a = !0;
              }),
                void 0 === n && (n = r(23605)),
                n(t, { readable: e, writable: i }, function (t) {
                  if (t) return o(t);
                  (a = !0), o();
                });
              var u = !1;
              return function (e) {
                if (!a && !u)
                  return (
                    (u = !0),
                    (function (t) {
                      return t.setHeader && "function" == typeof t.abort;
                    })(t)
                      ? t.abort()
                      : "function" == typeof t.destroy
                        ? t.destroy()
                        : void o(e || new s("pipe"))
                  );
              };
            })(t, o, i > 0, function (t) {
              h || (h = t), t && c.forEach(u), o || (c.forEach(u), l(h));
            });
          });
          return e.reduce(f);
        };
      },
      39776: (t, e, r) => {
        "use strict";
        var n = r(26531).F.ERR_INVALID_OPT_VALUE;
        t.exports = {
          getHighWaterMark: function (t, e, r, i) {
            var o = (function (t, e, r) {
              return null != t.highWaterMark
                ? t.highWaterMark
                : e
                  ? t[r]
                  : null;
            })(e, i, r);
            if (null != o) {
              if (!isFinite(o) || Math.floor(o) !== o || o < 0)
                throw new n(i ? r : "highWaterMark", o);
              return Math.floor(o);
            }
            return t.objectMode ? 16 : 16384;
          },
        };
      },
      47352: (t, e, r) => {
        t.exports = r(96827).EventEmitter;
      },
      360: (t, e, r) => {
        "use strict";
        var n = r(31817).Buffer,
          i =
            n.isEncoding ||
            function (t) {
              switch ((t = "" + t) && t.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                  return !0;
                default:
                  return !1;
              }
            };
        function o(t) {
          var e;
          switch (
            ((this.encoding = (function (t) {
              var e = (function (t) {
                if (!t) return "utf8";
                for (var e; ; )
                  switch (t) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return t;
                    default:
                      if (e) return;
                      (t = ("" + t).toLowerCase()), (e = !0);
                  }
              })(t);
              if ("string" != typeof e && (n.isEncoding === i || !i(t)))
                throw new Error("Unknown encoding: " + t);
              return e || t;
            })(t)),
            this.encoding)
          ) {
            case "utf16le":
              (this.text = u), (this.end = f), (e = 4);
              break;
            case "utf8":
              (this.fillLast = a), (e = 4);
              break;
            case "base64":
              (this.text = h), (this.end = l), (e = 3);
              break;
            default:
              return (this.write = c), void (this.end = d);
          }
          (this.lastNeed = 0),
            (this.lastTotal = 0),
            (this.lastChar = n.allocUnsafe(e));
        }
        function s(t) {
          return t <= 127
            ? 0
            : t >> 5 == 6
              ? 2
              : t >> 4 == 14
                ? 3
                : t >> 3 == 30
                  ? 4
                  : t >> 6 == 2
                    ? -1
                    : -2;
        }
        function a(t) {
          var e = this.lastTotal - this.lastNeed,
            r = (function (t, e) {
              if (128 != (192 & e[0])) return (t.lastNeed = 0), "�";
              if (t.lastNeed > 1 && e.length > 1) {
                if (128 != (192 & e[1])) return (t.lastNeed = 1), "�";
                if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2]))
                  return (t.lastNeed = 2), "�";
              }
            })(this, t);
          return void 0 !== r
            ? r
            : this.lastNeed <= t.length
              ? (t.copy(this.lastChar, e, 0, this.lastNeed),
                this.lastChar.toString(this.encoding, 0, this.lastTotal))
              : (t.copy(this.lastChar, e, 0, t.length),
                void (this.lastNeed -= t.length));
        }
        function u(t, e) {
          if ((t.length - e) % 2 == 0) {
            var r = t.toString("utf16le", e);
            if (r) {
              var n = r.charCodeAt(r.length - 1);
              if (n >= 55296 && n <= 56319)
                return (
                  (this.lastNeed = 2),
                  (this.lastTotal = 4),
                  (this.lastChar[0] = t[t.length - 2]),
                  (this.lastChar[1] = t[t.length - 1]),
                  r.slice(0, -1)
                );
            }
            return r;
          }
          return (
            (this.lastNeed = 1),
            (this.lastTotal = 2),
            (this.lastChar[0] = t[t.length - 1]),
            t.toString("utf16le", e, t.length - 1)
          );
        }
        function f(t) {
          var e = t && t.length ? this.write(t) : "";
          if (this.lastNeed) {
            var r = this.lastTotal - this.lastNeed;
            return e + this.lastChar.toString("utf16le", 0, r);
          }
          return e;
        }
        function h(t, e) {
          var r = (t.length - e) % 3;
          return 0 === r
            ? t.toString("base64", e)
            : ((this.lastNeed = 3 - r),
              (this.lastTotal = 3),
              1 === r
                ? (this.lastChar[0] = t[t.length - 1])
                : ((this.lastChar[0] = t[t.length - 2]),
                  (this.lastChar[1] = t[t.length - 1])),
              t.toString("base64", e, t.length - r));
        }
        function l(t) {
          var e = t && t.length ? this.write(t) : "";
          return this.lastNeed
            ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
            : e;
        }
        function c(t) {
          return t.toString(this.encoding);
        }
        function d(t) {
          return t && t.length ? this.write(t) : "";
        }
        (e.I = o),
          (o.prototype.write = function (t) {
            if (0 === t.length) return "";
            var e, r;
            if (this.lastNeed) {
              if (void 0 === (e = this.fillLast(t))) return "";
              (r = this.lastNeed), (this.lastNeed = 0);
            } else r = 0;
            return r < t.length
              ? e
                ? e + this.text(t, r)
                : this.text(t, r)
              : e || "";
          }),
          (o.prototype.end = function (t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�" : e;
          }),
          (o.prototype.text = function (t, e) {
            var r = (function (t, e, r) {
              var n = e.length - 1;
              if (n < r) return 0;
              var i = s(e[n]);
              return i >= 0
                ? (i > 0 && (t.lastNeed = i - 1), i)
                : --n < r || -2 === i
                  ? 0
                  : (i = s(e[n])) >= 0
                    ? (i > 0 && (t.lastNeed = i - 2), i)
                    : --n < r || -2 === i
                      ? 0
                      : (i = s(e[n])) >= 0
                        ? (i > 0 && (2 === i ? (i = 0) : (t.lastNeed = i - 3)),
                          i)
                        : 0;
            })(this, t, e);
            if (!this.lastNeed) return t.toString("utf8", e);
            this.lastTotal = r;
            var n = t.length - (r - this.lastNeed);
            return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n);
          }),
          (o.prototype.fillLast = function (t) {
            if (this.lastNeed <= t.length)
              return (
                t.copy(
                  this.lastChar,
                  this.lastTotal - this.lastNeed,
                  0,
                  this.lastNeed,
                ),
                this.lastChar.toString(this.encoding, 0, this.lastTotal)
              );
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length),
              (this.lastNeed -= t.length);
          });
      },
      70721: (t, e, r) => {
        "use strict";
        var n = r(74503).Buffer,
          i =
            n.isEncoding ||
            function (t) {
              switch ((t = "" + t) && t.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                  return !0;
                default:
                  return !1;
              }
            };
        function o(t) {
          var e;
          switch (
            ((this.encoding = (function (t) {
              var e = (function (t) {
                if (!t) return "utf8";
                for (var e; ; )
                  switch (t) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return t;
                    default:
                      if (e) return;
                      (t = ("" + t).toLowerCase()), (e = !0);
                  }
              })(t);
              if ("string" != typeof e && (n.isEncoding === i || !i(t)))
                throw new Error("Unknown encoding: " + t);
              return e || t;
            })(t)),
            this.encoding)
          ) {
            case "utf16le":
              (this.text = u), (this.end = f), (e = 4);
              break;
            case "utf8":
              (this.fillLast = a), (e = 4);
              break;
            case "base64":
              (this.text = h), (this.end = l), (e = 3);
              break;
            default:
              return (this.write = c), void (this.end = d);
          }
          (this.lastNeed = 0),
            (this.lastTotal = 0),
            (this.lastChar = n.allocUnsafe(e));
        }
        function s(t) {
          return t <= 127
            ? 0
            : t >> 5 == 6
              ? 2
              : t >> 4 == 14
                ? 3
                : t >> 3 == 30
                  ? 4
                  : t >> 6 == 2
                    ? -1
                    : -2;
        }
        function a(t) {
          var e = this.lastTotal - this.lastNeed,
            r = (function (t, e) {
              if (128 != (192 & e[0])) return (t.lastNeed = 0), "�";
              if (t.lastNeed > 1 && e.length > 1) {
                if (128 != (192 & e[1])) return (t.lastNeed = 1), "�";
                if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2]))
                  return (t.lastNeed = 2), "�";
              }
            })(this, t);
          return void 0 !== r
            ? r
            : this.lastNeed <= t.length
              ? (t.copy(this.lastChar, e, 0, this.lastNeed),
                this.lastChar.toString(this.encoding, 0, this.lastTotal))
              : (t.copy(this.lastChar, e, 0, t.length),
                void (this.lastNeed -= t.length));
        }
        function u(t, e) {
          if ((t.length - e) % 2 == 0) {
            var r = t.toString("utf16le", e);
            if (r) {
              var n = r.charCodeAt(r.length - 1);
              if (n >= 55296 && n <= 56319)
                return (
                  (this.lastNeed = 2),
                  (this.lastTotal = 4),
                  (this.lastChar[0] = t[t.length - 2]),
                  (this.lastChar[1] = t[t.length - 1]),
                  r.slice(0, -1)
                );
            }
            return r;
          }
          return (
            (this.lastNeed = 1),
            (this.lastTotal = 2),
            (this.lastChar[0] = t[t.length - 1]),
            t.toString("utf16le", e, t.length - 1)
          );
        }
        function f(t) {
          var e = t && t.length ? this.write(t) : "";
          if (this.lastNeed) {
            var r = this.lastTotal - this.lastNeed;
            return e + this.lastChar.toString("utf16le", 0, r);
          }
          return e;
        }
        function h(t, e) {
          var r = (t.length - e) % 3;
          return 0 === r
            ? t.toString("base64", e)
            : ((this.lastNeed = 3 - r),
              (this.lastTotal = 3),
              1 === r
                ? (this.lastChar[0] = t[t.length - 1])
                : ((this.lastChar[0] = t[t.length - 2]),
                  (this.lastChar[1] = t[t.length - 1])),
              t.toString("base64", e, t.length - r));
        }
        function l(t) {
          var e = t && t.length ? this.write(t) : "";
          return this.lastNeed
            ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
            : e;
        }
        function c(t) {
          return t.toString(this.encoding);
        }
        function d(t) {
          return t && t.length ? this.write(t) : "";
        }
        (e.I = o),
          (o.prototype.write = function (t) {
            if (0 === t.length) return "";
            var e, r;
            if (this.lastNeed) {
              if (void 0 === (e = this.fillLast(t))) return "";
              (r = this.lastNeed), (this.lastNeed = 0);
            } else r = 0;
            return r < t.length
              ? e
                ? e + this.text(t, r)
                : this.text(t, r)
              : e || "";
          }),
          (o.prototype.end = function (t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�" : e;
          }),
          (o.prototype.text = function (t, e) {
            var r = (function (t, e, r) {
              var n = e.length - 1;
              if (n < r) return 0;
              var i = s(e[n]);
              return i >= 0
                ? (i > 0 && (t.lastNeed = i - 1), i)
                : --n < r || -2 === i
                  ? 0
                  : (i = s(e[n])) >= 0
                    ? (i > 0 && (t.lastNeed = i - 2), i)
                    : --n < r || -2 === i
                      ? 0
                      : (i = s(e[n])) >= 0
                        ? (i > 0 && (2 === i ? (i = 0) : (t.lastNeed = i - 3)),
                          i)
                        : 0;
            })(this, t, e);
            if (!this.lastNeed) return t.toString("utf8", e);
            this.lastTotal = r;
            var n = t.length - (r - this.lastNeed);
            return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n);
          }),
          (o.prototype.fillLast = function (t) {
            if (this.lastNeed <= t.length)
              return (
                t.copy(
                  this.lastChar,
                  this.lastTotal - this.lastNeed,
                  0,
                  this.lastNeed,
                ),
                this.lastChar.toString(this.encoding, 0, this.lastTotal)
              );
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length),
              (this.lastNeed -= t.length);
          });
      },
      74503: (t, e, r) => {
        var n = r(38891),
          i = n.Buffer;
        function o(t, e) {
          for (var r in t) e[r] = t[r];
        }
        function s(t, e, r) {
          return i(t, e, r);
        }
        i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
          ? (t.exports = n)
          : (o(n, e), (e.Buffer = s)),
          o(i, s),
          (s.from = function (t, e, r) {
            if ("number" == typeof t)
              throw new TypeError("Argument must not be a number");
            return i(t, e, r);
          }),
          (s.alloc = function (t, e, r) {
            if ("number" != typeof t)
              throw new TypeError("Argument must be a number");
            var n = i(t);
            return (
              void 0 !== e
                ? "string" == typeof r
                  ? n.fill(e, r)
                  : n.fill(e)
                : n.fill(0),
              n
            );
          }),
          (s.allocUnsafe = function (t) {
            if ("number" != typeof t)
              throw new TypeError("Argument must be a number");
            return i(t);
          }),
          (s.allocUnsafeSlow = function (t) {
            if ("number" != typeof t)
              throw new TypeError("Argument must be a number");
            return n.SlowBuffer(t);
          });
      },
    },
  ]);
//# sourceMappingURL=813.min.js.map
